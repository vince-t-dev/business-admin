{"ast":null,"code":"var _jsxFileName = \"/Users/vince/volt-react/src/components/Code.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Card, Button, Tooltip, OverlayTrigger } from 'react-bootstrap';\nimport Highlight, { Prism } from 'prism-react-renderer';\nimport themeStyle from \"../assets/syntax-themes/ghcolors.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(props => {\n  _s();\n\n  const {\n    code = \"\",\n    language = \"jsx\"\n  } = props;\n  const [copied, setCopied] = useState(false);\n\n  const handleCopy = () => {\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  const CodeStyling = _ref => {\n    let {\n      className,\n      style,\n      tokens,\n      getLineProps,\n      getTokenProps\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"position-relative pe-8 mb-2\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n          className: className,\n          style: style,\n          children: tokens.map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", { ...getLineProps({\n              line,\n              key: i\n            }),\n            children: line.map((token, key) => /*#__PURE__*/_jsxDEV(\"span\", { ...getTokenProps({\n                token,\n                key\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this), copied ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-success copy-code-text\",\n          children: \"Copied\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 19\n        }, this) : null, /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n          trigger: ['hover', 'focus'],\n          placement: \"top\",\n          overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n            children: \"Copy to clipboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 20\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n            text: code,\n            onCopy: handleCopy,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"sm\",\n              variant: \"primary\",\n              className: \"copy-code-button\",\n              children: \"Copy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Highlight, {\n    Prism: Prism,\n    code: code,\n    language: language,\n    theme: themeStyle,\n    children: CodeStyling\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}, \"NE86rL3vg4NVcTTWDavsT0hUBJs=\");","map":{"version":3,"sources":["/Users/vince/volt-react/src/components/Code.js"],"names":["React","useState","CopyToClipboard","Card","Button","Tooltip","OverlayTrigger","Highlight","Prism","themeStyle","props","code","language","copied","setCopied","handleCopy","setTimeout","CodeStyling","className","style","tokens","getLineProps","getTokenProps","map","line","i","key","token"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,OAAvB,EAAgCC,cAAhC,QAAsD,iBAAtD;AACA,OAAOC,SAAP,IAAoBC,KAApB,QAAiC,sBAAjC;AAEA,OAAOC,UAAP,MAAuB,uCAAvB;;AAEA,kBAAgBC,KAAD,IAAW;AAAA;;AACxB,QAAM;AAAEC,IAAAA,IAAI,GAAG,EAAT;AAAaC,IAAAA,QAAQ,GAAG;AAAxB,MAAkCF,KAAxC;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMc,UAAU,GAAG,MAAM;AACvBD,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,IAAAA,UAAU,CAAC,MAAMF,SAAS,CAAC,KAAD,CAAhB,EAAyB,IAAzB,CAAV;AACD,GAHD;;AAKA,QAAMG,WAAW,GAAG;AAAA,QAAC;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,KAAb;AAAoBC,MAAAA,MAApB;AAA4BC,MAAAA,YAA5B;AAA0CC,MAAAA;AAA1C,KAAD;AAAA,wBAClB,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,6BAAhB;AAAA,6BACE,QAAC,IAAD,CAAM,IAAN;AAAA,gCACE;AAAK,UAAA,SAAS,EAAEJ,SAAhB;AAA2B,UAAA,KAAK,EAAEC,KAAlC;AAAA,oBACGC,MAAM,CAACG,GAAP,CAAW,CAACC,IAAD,EAAOC,CAAP,kBACV,oBAASJ,YAAY,CAAC;AAAEG,cAAAA,IAAF;AAAQE,cAAAA,GAAG,EAAED;AAAb,aAAD,CAArB;AAAA,sBACGD,IAAI,CAACD,GAAL,CAAS,CAACI,KAAD,EAAQD,GAAR,kBAAgB,qBAAUJ,aAAa,CAAC;AAAEK,gBAAAA,KAAF;AAASD,gBAAAA;AAAT,eAAD;AAAvB;AAAA;AAAA;AAAA;AAAA,oBAAzB;AADH;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,EASGb,MAAM,gBAAG;AAAM,UAAA,SAAS,EAAC,6BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,GAAiE,IAT1E,eAWE,QAAC,cAAD;AACE,UAAA,OAAO,EAAE,CAAC,OAAD,EAAU,OAAV,CADX;AAEE,UAAA,SAAS,EAAC,KAFZ;AAGE,UAAA,OAAO,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHX;AAAA,iCAKE,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAEF,IAAvB;AAA6B,YAAA,MAAM,EAAEI,UAArC;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,IAAb;AAAkB,cAAA,OAAO,EAAC,SAA1B;AAAoC,cAAA,SAAS,EAAC,kBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADkB;AAAA,GAApB;;AA0BA,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,EAAEP,KAAlB;AAAyB,IAAA,IAAI,EAAEG,IAA/B;AAAqC,IAAA,QAAQ,EAAEC,QAA/C;AAAyD,IAAA,KAAK,EAAEH,UAAhE;AAAA,cACGQ;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxCD","sourcesContent":["\nimport React, { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Card, Button, Tooltip, OverlayTrigger } from 'react-bootstrap';\nimport Highlight, { Prism } from 'prism-react-renderer';\n\nimport themeStyle from \"../assets/syntax-themes/ghcolors.json\";\n\nexport default (props) => {\n  const { code = \"\", language = \"jsx\" } = props;\n  const [copied, setCopied] = useState(false);\n\n  const handleCopy = () => {\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  const CodeStyling = ({ className, style, tokens, getLineProps, getTokenProps }) => (\n    <Card className=\"position-relative pe-8 mb-2\">\n      <Card.Body>\n        <pre className={className} style={style}>\n          {tokens.map((line, i) => (\n            <div {...getLineProps({ line, key: i })}>\n              {line.map((token, key) => <span {...getTokenProps({ token, key })} />)}\n            </div>\n          ))}\n        </pre>\n\n        {copied ? <span className=\"text-success copy-code-text\">Copied</span> : null}\n\n        <OverlayTrigger\n          trigger={['hover', 'focus']}\n          placement=\"top\"\n          overlay={<Tooltip>Copy to clipboard</Tooltip>}\n        >\n          <CopyToClipboard text={code} onCopy={handleCopy}>\n            <Button size=\"sm\" variant=\"primary\" className=\"copy-code-button\">Copy</Button>\n          </CopyToClipboard>\n        </OverlayTrigger>\n      </Card.Body>\n    </Card>\n  );\n\n  return (\n    <Highlight Prism={Prism} code={code} language={language} theme={themeStyle}>\n      {CodeStyling}\n    </Highlight>\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}