{"version":3,"sources":["context/auth.js","context/site.js","routes.js","components/Footer.js","components/Pagination.js","components/Attendees.js","pages/List.js","components/TextEditor.js","components/ImageEditor.js","components/DateTimePicker.js","pages/ListItem.js","pages/Users.js","pages/Attendee.js","assets/img/team/profile-picture-5.jpg","assets/img/profile-cover.jpg","assets/img/team/profile-picture-1.jpg","assets/img/team/profile-picture-2.jpg","assets/img/team/profile-picture-3.jpg","assets/img/team/profile-picture-4.jpg","components/Widgets.js","data/teamMembers.js","components/Forms.js","pages/Settings.js","assets/media/xprs-logo-dark.svg","pages/Login.js","assets/img/illustrations/signin.svg","pages/examples/Signup.js","pages/examples/ForgotPassword.js","pages/examples/ResetPassword.js","pages/examples/Lock.js","assets/img/illustrations/404.svg","pages/examples/NotFound.js","assets/img/illustrations/500.svg","pages/examples/ServerError.js","components/Sidebar.js","assets/media/xprs-logo.svg","assets/media/xprs-logo-with-red-white.svg","assets/media/xprs-logo-with-red.svg","data/notifications.js","components/Navbar.js","assets/media/loader.gif","components/Preloader.js","pages/HomePage.js","components/ScrollToTop.js","index.js"],"names":["authContext","createContext","AuthProvider","children","auth","useState","user","setUser","signin","credentials","callback","a","jsonData","action","axios","post","JSON","stringify","headers","withCredentials","response","result","data","parse","sessionCookie","document","cookie","replace","sessionData","atob","split","xsrf_token","xsrf","userData","token","error","localStorage","setItem","signout","getItem","clear","useEffect","then","window","location","useAuthProvider","Provider","value","useAuth","useContext","siteContext","SiteContext","site","site_config","showPreloader","siteConfig","setSiteConfig","updateSiteConfig","usePrevious","ref","useRef","current","useSiteContext","useSite","AllRoutes","path","props","showSettings","modalDeleteItems","setModalDeleteItems","handleClose","id","className","Stack","direction","gap","type","onClick","e","selectedItems","length","Form","Group","Label","Select","onChange","target","map","getElementById","Id","checked","Modal","centered","show","onHide","Header","closeButton","closeVariant","Title","Body","index","dangerouslySetInnerHTML","__html","Footer","Button","variant","CustomPagination","Number","page","activeItem","setActiveItem","pages","setPages","totalPages","navigate","useNavigate","href","getPages","handlePaginationChange","number","pages_array","push","Pagination","Prev","start","end","setVisiblePages","Item","active","Ellipsis","Next","onNextItem","Attendees","setError","isLoaded","setIsLoaded","items","setItems","setSelectedItems","listPagination","setListPagination","keyword","setKeyword","params","useParams","url","URL","fetchItems","query","goToPage","searchParams","append","fetch","search","method","Auth","res","json","_embedded","User","getSelectedItems","selected_item","find","filter","item","arr","selectAll","all_checkboxes","getElementsByName","i","unSelectAll","classList","add","remove","onSubmit","preventDefault","Row","Col","lg","InputGroup","Control","size","placeholder","Text","Table","responsive","Check","inline","undefined","name","FirstName","LastName","OverlayTrigger","overlay","Tooltip","to","state","message","colSpan","List","Article","Breadcrumb","listProps","Tab","Container","defaultActiveKey","sm","Nav","Link","eventKey","as","Card","border","Content","Pane","ArticleLink","icon","faLink","faList","Categories","category","Badge","bg","Name","CreatedOn","defaultChecked","Active","TextEditor","editor","InlineEditor","config","rte","toolbar","image","resizeUnit","styles","ckfinder","uploadUrl","options","resourceType","onReady","model","schema","extend","isLimit","onBlur","event","getData","formatted_data","ImageEditor","cropper","setCropper","enableCrop","setEnableCrop","setImage","uploadFile","file","image_to_upload","base64","mime","byteChars","byteArrays","offset","len","slice","byteNumbers","Array","charCodeAt","byteArray","Uint8Array","Blob","base64ToBlob","formData","FormData","timestamp","Math","floor","Date","now","src","autoCrop","autoCropArea","style","height","width","guides","background","dragMode","viewMode","onInitialized","instance","xs","Range","defaultValue","min","max","step","val","backgroundSize","zoomTo","controlId","faCropAlt","crop_data","getCroppedCanvas","toDataURL","files","dataTransfer","reader","FileReader","onload","readAsDataURL","DateTimePicker","isTimePicker","dateFormat","formatted_value","setValue","moment","format","timeFormat","timeConstraints","minutes","initialViewMode","renderInput","openCalendar","onFocus","ListItem","isCreateNew","content_data","isSaved","setIsSaved","title","description","cardValues","setCardValues","handleCardChange","newCardValues","tags","setTags","updateData","object","p_list","elem","updateObject","submit_content","uri","linkAs","linkProps","Description","Picture","SourcePath","Html","DisplayDate","StartTime","EndTime","CardGroup","card","splice","removeCardFields","el","plaintext","htmlSize","newTags","handleTagChange","removeTags","Dropdown","Toggle","faChevronDown","Spinner","animation","Menu","PageTitle","MetaTagKeywords","MetaTagDescription","Users","users","setUsers","faSearch","ButtonGroup","faSlidersH","faCheck","faCog","u","Email","CompanyName","LastLogin","Attendee","CustomFields","ProfileImage","Image","ProfileCardWidget","faCalendarCheck","faComment","backgroundImage","ProfileCover","Img","alt","Profile5","Subtitle","City","faUserPlus","ChoosePhotoWidget","photo","fluid","rounded","faPaperclip","GeneralInfoForm","birthday","setBirthday","md","required","faCalendarAlt","faPlus","faFileAlt","faCommentDots","faBoxOpen","Divider","faRocket","faClipboard","faStore","faCartArrowDown","faChartPie","xl","Profile3","Login","showPassword","setShowPassword","passwordInputType","passwordIconColor","useLocation","from","pathname","username","setUsername","password","setPassword","UserLogin","UserPassword","status","handleLogin","faEnvelope","autoFocus","faUnlockAlt","color","faEye","Alert","faAngleLeft","BgImage","FormCheck","Input","htmlFor","faFacebookF","faTwitter","faGithub","NotFoundImage","faChevronLeft","ErrorImage","setShow","showClass","onCollapse","CollapsableNavItem","defaultKey","indexOf","Accordion","NavItem","link","external","badgeText","badgeBg","badgeColor","setHome","isActive","pill","text","Navbar","expand","collapseOnSelect","Brand","CSSTransition","timeout","in","classNames","sticky","faSignOutAlt","faUsers","Profile1","Profile2","Profile4","NOTIFICATIONS_DATA","notifications","setNotifications","areNotificationsRead","reduce","acc","notif","read","Notification","sender","time","readClassName","ListGroup","showRightDropdown","setShowRightDropdown","expanded","onToggle","setTimeout","n","faBell","isOpen","source","faUserCircle","faEnvelopeOpen","faUserShield","PreloaderLogo","RouteWithLoader","Component","component","loaded","setLoaded","timer","clearTimeout","Preloader","RouteWithSidebar","Sidebar","PrivateRoute","rest","element","Signup","ForgotPassword","ResetPassword","Lock","NotFoundPage","ServerError","Settings","NotFound","scrollTo","top","left","behavior","ReactDOM","render","ScrollToTop","HomePage"],"mappings":"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","file":"static/js/main.5fdbece9.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext, createContext } from \"react\";\nimport axios from \"axios\";\n\nconst authContext = createContext();\nexport function AuthProvider({ children }) {\n\tconst auth = useAuthProvider()\n\treturn <authContext.Provider value={auth}> { children } </authContext.Provider>\n}\n\nexport const useAuth = () => useContext(authContext);\n\nfunction useAuthProvider() {\n\tconst [user, setUser] = useState(null);\n\t\n\t// sign in\n\tconst signin = async (credentials, callback) => {\n\t\tlet jsonData = credentials;\n\t\tjsonData.action = \"login\";\n\t\t\n\t\tconst response = await axios.post(\"/__xpr__/pub_engine/business-admin/element/ajax_handler\",JSON.stringify(jsonData), {\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\twithCredentials: true\n\t\t});\n\n\t\tlet result = (response.data?.data) ? JSON.parse(response.data?.data) : response.data; \n\n\t\t// get xsrf token from cookie\n\t\tlet sessionCookie = document.cookie.replace(/(?:(?:^|.*;\\s*)xpr-token-backend\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\");\n\t\tlet sessionData = sessionCookie ? JSON.parse(atob(sessionCookie.split('.')[1])) : \"\";\n\t\tlet xsrf_token = sessionData.xsrf;\n\n\t\tlet userData = {\"token\": result.token, \"xsrf_token\": xsrf_token, \"data\": response.data?.user};\n\t\tif (!result.error) {\n\t\t\tsetUser(userData);\n\t\t\tlocalStorage.setItem(\"user\",JSON.stringify(userData));\n\t\t}\n\t\tif (callback) callback(result);\n\t}\n\n\t// sign out\n\tconst signout = async (callback) => {\n\t\tlet user = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {};\n\t\tlet jsonData = { action: \"logout\" };\n\t\tconst response = await axios.post(\"/__xpr__/pub_engine/business-admin/element/ajax_handler\",JSON.stringify(jsonData), {\n\t\t\theaders: {\n\t\t\t\t\"Auth\": user.token,\n\t\t\t\t\"Content-Type\": \"application/json\" \n\t\t\t},\n\t\t\twithCredentials: true\n\t\t});\n\n\t\t// clear user data\n\t\tsetUser(null);\n\t\tlocalStorage.clear();\n\t\tif (callback) callback(response);\n\t}\n\n\t//check authentication\n\tuseEffect(() => {\n\t\t// validate access token on page load\n\t\tif (localStorage.getItem(\"user\")) {\n\t\t\tlet user_data = JSON.parse(localStorage.getItem(\"user\"));\n\t\t\tlet token = user_data.token;\n\t\t\tlet jsonData = { action: \"checkAuth\" };\n\t\t\taxios.post(\"/__xpr__/pub_engine/business-admin/element/ajax_handler\",JSON.stringify(jsonData), {\n\t\t\t\theaders: {\n\t\t\t\t\t\"Auth\": token,\n\t\t\t\t\t\"Content-Type\": \"application/json\" \n\t\t\t\t},\n\t\t\t\twithCredentials: true\n\t\t\t})\n\t\t\t.then(function(response) {\n\t\t\t\t// invalid/expired token\n\t\t\t\tif (response.data?.error) {\n\t\t\t\t\t// clear user data and redirect user to login screen\n\t\t\t\t\tsetUser(null);\n\t\t\t\t\tlocalStorage.clear();\n\t\t\t\t\twindow.location.replace(\"/my-business/login\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, [])\n\n\treturn {\n\t\tuser,\n\t\tsignin,\n\t\tsignout\n\t}\n}","import React, { useContext, createContext, useState, useRef, useEffect } from \"react\";\n\n// global site settings\nconst siteContext = createContext();\n\nexport function SiteContext({ children }) {\n\tconst site = useSiteContext();\n\treturn <siteContext.Provider value={site}> { children } </siteContext.Provider>\n}\n\nexport const useSite = () => useContext(siteContext);\n\nfunction useSiteContext() {\n    // global values can be set here\n    let site_config = {\n        showPreloader: false\n    }\n\tconst [siteConfig, setSiteConfig] = useState(site_config);\n    // update config\n    const updateSiteConfig = (value) => {\n        setSiteConfig(value);\n    };\n    // use prev state\n    const usePrevious = (value) => {\n        const ref = useRef();\n        useEffect(() => {\n          ref.current = value;\n        });\n        return ref.current;\n    };\n    return { siteConfig, updateSiteConfig, usePrevious };\n}","\nexport const AllRoutes = {\n    // pages\n    Home: { path: \"/my-business/\" },\n    Start: { path: \"/__xpr__/pub_engine/business-admin/web\" },\n    List: { path: \"/my-business/list/*\" },\n    ListItem: { path: \"/my-business/list/edit/:id\" },\n    Attendee: { path: \"/my-business/attendees/:id\"},\n    Users: { path: \"/my-business/users/*\" },\n    \n    Settings: { path: \"/my-business/settings\" },\n    Login: { path: \"/my-business/login\" },\n    Signup: { path: \"/my-business/examples/sign-up\" },\n    ForgotPassword: { path: \"/my-business/examples/forgot-password\" },\n    ResetPassword: { path: \"/my-business/examples/reset-password\" },\n    Lock: { path: \"/my-business/examples/lock\" },\n    NotFound: { path: \"/my-business/examples/404\" },\n    ServerError: { path: \"/my-business/examples/500\" }\n};","import React, {useState} from \"react\";\nimport { Stack, Form, Modal, Button } from 'react-bootstrap';\n\nexport default (props) => {\n  \tconst showSettings = props.showSettings;\n  \tconst toggleSettings = (toggle) => {\n    \tprops.toggleSettings(toggle);\n  \t}\n\n    // modal\n    const [modalDeleteItems, setModalDeleteItems] = useState(false);\n    const handleClose = () => setModalDeleteItems(false);\n\n    // delete items \n    const openModalDeleteItems = e => {\n        setModalDeleteItems(true);\n    }\n\n    // toggle status\n    const toggleStatus = e => {\n        if (e.target.value == \"Published\") {\n            props.selectedItems.map(a => {\n                document.getElementById(\"switch-status-\"+a.Id).checked = true;\n            });\n        }\n        if (e.target.value == \"Unpublished\") {\n            props.selectedItems.map(a => {\n                document.getElementById(\"switch-status-\"+a.Id).checked = false;\n            });\n        }\n    }  \n\n  \treturn (\n    \t<>\n        {<footer id=\"nav-footer\" className=\"footer py-3 px-4\">\n            <Stack direction=\"horizontal\" gap={3}>\n                <p className=\"text-sm-left text-danger\">\n                    <button type=\"button\" className=\"btn btn-link p-0 text-danger\" onClick={openModalDeleteItems}>\n                        <i className=\"xpri-delete me-2\"></i>\n                    </button>\n                    Delete Selected ({props.selectedItems.length})\n                </p>\n                <div className=\"vr\"/>\n                <Form.Group className=\"d-flex align-items-center\">\n                    <Form.Label className=\"text-nowrap m-0 me-3\">Set Status:</Form.Label>\n                    <Form.Select onChange={toggleStatus}>\n                        <option>Select</option>\n                        <option value=\"Published\">Published</option>\n                        <option value=\"Unpublished\">Unpublished</option>\n                    </Form.Select>\n                </Form.Group>\n            </Stack>\n            {/* modal: confirm delete items */}\n            <Modal centered show={modalDeleteItems} onHide={handleClose}>\n                <Modal.Header closeButton closeVariant=\"white\"> \n                    <Modal.Title>Confirm Delete</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <p>Are you sure you want to delete the Article:</p>\n                    <ul> {                        \n                        props.selectedItems.map((a,index) => (\n                            <li key={\"li-\"+a.Id} dangerouslySetInnerHTML={{__html: a.Title}}></li>\n                        ))\n                    }\n                    </ul>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Cancel\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                        Confirm\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </footer>}\n        </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction CustomPagination(props) {\n    const [activeItem, setActiveItem] = useState(Number(props.page));\n    const [pages, setPages] = useState([]);\n    const totalPages = Number(props.totalPages);\n    const pageRange = 2;\n    const maxPages = 5;\n    const navigate = useNavigate();   \n\n    // hooks\n    // active page\n    useEffect(() => {\n        navigate(props.href+activeItem);        \n    },[activeItem]);\n    // current page \n    useEffect(() => {\n        setActiveItem(props.page);\n    },[props.page]);\n    // total pages\n    useEffect(() => {\n        if (totalPages) getPages();\n    },[totalPages]);\n\n    // previous/next arrows\n    const onPrevItem = () => {\n        const prevActiveItem = activeItem == 1 ? activeItem : activeItem - 1;\n        setActiveItem(prevActiveItem);\n    };  \n    const onNextItem = (totalPages) => {\n        const nextActiveItem = activeItem == totalPages ? activeItem : activeItem + 1;\n        setActiveItem(nextActiveItem);\n    };\n    // pagination on click\n    const handlePaginationChange = (number) => {\n        setActiveItem(number);\n        navigate(props.href+number);\n    };\n\n    // get pages\n    const getPages = () => {\n        let pages_array = [];\n        for (let number = 1; number <= totalPages; number++) {\n            pages_array.push({page: number});\n        }\n        setPages(pages_array);\n    }\n\n    // show pages in range\n    const setVisiblePages = (page) => {\n        let start = props.page - pageRange;\n        let end = props.page + pageRange;\n        return (page >= start && page <= end && page != totalPages);\n    }\n\n    return (\n        <>\n            { pages.length ?\n            <Pagination>\n                <Pagination.Prev onClick={onPrevItem}/>\n                { pages?.map(a => (\n                    setVisiblePages(a.page) ?\n                    <Pagination.Item active={props.page == a.page} key={a.page} onClick={e => {handlePaginationChange(a.page)}}>\n                        {a.page}\n                    </Pagination.Item>\n                    :\n                    \"\"\n                 )) }\n                {/* ellipsis */}\n                { totalPages > maxPages && props.page <= totalPages - maxPages && <Pagination.Ellipsis/> }\n                {/* last page */\n                <Pagination.Item active={props.page == totalPages} key={totalPages} onClick={e => {handlePaginationChange(totalPages)}}>\n                { totalPages }\n                </Pagination.Item> }\n                <Pagination.Next onClick={() => onNextItem(totalPages)}/>\n            </Pagination>\n            :\n            <Pagination>\n                <Pagination.Prev/>\n                <Pagination.Item active>1</Pagination.Item>\n                <Pagination.Next/>\n            </Pagination>\n            }\n        </>\n    );\n}\n\nexport default CustomPagination;","import React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { Row, Col, InputGroup, Form, Table, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport CustomPagination from \"../components/Pagination\";\nimport { useAuth } from \"../context/auth\";\n\nfunction Attendees() {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n    const [selectedItems, setSelectedItems] = useState([]);\n    const [listPagination, setListPagination] = useState({});\n    const [keyword, setKeyword] = useState(\"\");\n    const params = useParams();\n    const navigate = useNavigate();\n    let url = new URL(window.location.href);\n    let page = Number(params[\"*\"]?.split(\"p\")[1] || 1);\n\n    // update search keyword\n    const updateKeyword = e => {\n        setKeyword(e.target.value);    \n    }\n\n    // search form submit\n    const getSearch = e => {\n        e.preventDefault();\n        // reset page to 1 when doing search\n        (page == 1) ? fetchItems(keyword,1) : navigate(\"/my-business/list/p1\");\n    }\n\n    // hooks: fetch data when page changes\n    useEffect(() => {\n        fetchItems(keyword);\n    },[page]);\n\n    // fetch items\n    let auth = useAuth();\n    const fetchItems = (query,goToPage) => {\n        setIsLoaded(false);\n        url.searchParams.append(\"page\", goToPage ? goToPage : page);\n        if (query) url.searchParams.append(\"q\", query);\n        fetch(`/__xpr__/pub_engine/business-admin/element/users_json${url.search}`, {\n            method: \"GET\",\n            headers: { Auth: auth.user.token }\n        })\n        .then(res => res.json())\n        .then(\n            (result) => {\n                setIsLoaded(true);\n                setItems(result._embedded?.User);\n                setListPagination(result.Pagination);\n            },\n            (error) => {\n                setIsLoaded(true);\n                setError(error);\n            }\n        )\n        setSelectedItems([]);\n    }\n\n    // get selected items\n    const getSelectedItems = e => {\n        let selected_item = items.find(a => a.Id == e.target.value);\n        // add/remove from selected items list\n        if (e.target.checked) {\n            if (!selectedItems.filter(item => item.Id == selected_item.Id).length) \n                setSelectedItems(arr => [...arr, selected_item]);\n        } else {\n            setSelectedItems(selectedItems.filter(item => item.Id != selected_item.Id));\n        }\n    }\n\n    // toggle all checkboxes\n    const toggleAllItems = e => {\n        (e.target.checked) ? selectAll() : unSelectAll();\n    }\n\n    // select/unselect all\n    const selectAll = e => {\n        let all_checkboxes = document.getElementsByName(\"-check\");\n        for (let i = 0;i < all_checkboxes.length;i++) {\n            if (all_checkboxes[i].type == \"checkbox\") {\n                all_checkboxes[i].checked = true;\n                let selected_item = items.find(a => a.Id == all_checkboxes[i].value);\n                if (!selectedItems.filter(item => item.Id == selected_item.Id).length) \n                    setSelectedItems(arr => [...arr, selected_item]);\n            }\n        }\n    }\n    const unSelectAll = e => {\n        let all_checkboxes = document.getElementsByName(\"attendees-check\");\n        for (let i = 0;i < all_checkboxes.length;i++) {\n            if (all_checkboxes[i].type == \"checkbox\") {\n                all_checkboxes[i].checked = false;\n                setSelectedItems([]);\n            }\n        }\n    }\t\t\t\n\n    // show footer nav when select items\n    useEffect(() => {\n        if (selectedItems.length)\n            document.getElementById(\"nav-footer\").classList.add(\"active\");\n        else\n            document.getElementById(\"nav-footer\").classList.remove(\"active\");\n    }, [selectedItems]);\n\n    return (\n        <>\n            <Form onSubmit={getSearch}>\n                <Row className=\"justify-content-end align-items-center mb-3\">\n                    <Col lg={4} className=\"d-flex justify-content-end\">\n                        <InputGroup>\n                            <Form.Control size=\"lg\" type=\"text\" className=\"rounded-xl px-4\" placeholder=\"Search\" value={keyword} onChange={updateKeyword}/>\n                            <InputGroup.Text className=\"rounded-xl\">\n                                <i className=\"xpri-search text-primary\"></i>\n                            </InputGroup.Text>\n                        </InputGroup>\n                    </Col>\n                </Row>\n            </Form>\n            <Form>\n                {/* list table */}\n                <Table responsive=\"sm\">\n                    <thead>\n                        <tr>\n                            <th><Form.Check inline onChange={toggleAllItems}/></th>\n                            <th className=\"w-35\">Full Name</th>\n                            <th className=\"text-center\">Type</th>\n                            <th className=\"text-center\">Bookings</th>\n                            <th className=\"text-center\">Status</th>\n                            <th className=\"text-center\">Cost</th>\n                            <th className=\"text-center\">Payment</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n\n                    {isLoaded && items?.map(a => (\n                        <tr key={\"list-\"+a.Id} className={selectedItems.find(item => item.Id == a.Id) ? \"selected\" : undefined}>\n                            <td><span className=\"justify-content-start\"><Form.Check inline onChange={getSelectedItems} name=\"attendees-check\" value={a.Id}/></span></td>\n                            <td><span className=\"justify-content-start\">{ a.FirstName ? a.FirstName+\" \"+a.LastName : \"Name Surname\"}</span></td>\n                            <td><span className=\"justify-content-center\">Member</span></td>\n                            <td><span className=\"justify-content-center\">3</span></td>\n                            <td><span className=\"justify-content-center\">Paid</span></td>\n                            <td><span className=\"justify-content-center\">$20.00</span></td>\n                            <td><span className=\"justify-content-center\">Credit Card</span></td>\n                            <td>\n                                <span>\n                                    <div className=\"btn-group\">\n                                        <OverlayTrigger overlay={<Tooltip>Edit</Tooltip>}>\n                                            <Link to={\"/my-business/attendees/\"+a.Id} state={{item: a}} className=\"btn btn-link\"><i data-toggle=\"tooltip\" className=\"xpri-edit\"></i></Link>\n                                        </OverlayTrigger>\n                                        <OverlayTrigger overlay={<Tooltip>Preview</Tooltip>}>\n                                            <a href=\"\" className=\"btn btn-link\" target=\"_blank\"><i data-toggle=\"tooltip\" className=\"xpri-preview\"></i></a>\n                                        </OverlayTrigger>\n                                        <OverlayTrigger overlay={<Tooltip>Delete</Tooltip>}>\n                                            <button type=\"button\" className=\"btn btn-link\"><i data-toggle=\"tooltip\" className=\"xpri-delete\"></i></button>\n                                        </OverlayTrigger>\n                                    </div>\n                                </span>\n                            </td>\n                        </tr>\n                    ))}   \n                    { error && <div>Fetching list error: {error.message}</div> }\n                    { !items?.length && isLoaded && <tr><td colSpan=\"8\"><div className=\"text-center my-3\">No result found.</div></td></tr> }\n                    </tbody>\n\n                    {/* skeleton loader */}\n                    { !isLoaded &&\n                        <tbody>\n                        <tr>\n                            <td><span><div className=\"empty w-50\"></div></span></td><td><span><div className=\"empty\"></div></span></td>\n                            <td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty\"></div></span></td>\n                            <td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty\"></div></span></td>\n                            <td><span><div className=\"empty\"></div></span></td><td></td>\n                        </tr>\n                        <tr>\n                            <td><span><div className=\"empty w-50\"></div></span></td><td><span><div className=\"empty w-50\"></div></span></td>\n                            <td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty\"></div></span></td>\n                            <td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty\"></div></span></td>\n                            <td><span><div className=\"empty\"></div></span></td><td></td>\n                        </tr>\n                        <tr>\n                            <td><span><div className=\"empty w-50\"></div></span></td><td><span><div className=\"empty w-75\"></div></span></td>\n                            <td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty w-50\"></div></span></td>\n                            <td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty\"></div></span></td>\n                            <td><span><div className=\"empty\"></div></span></td><td></td>\n                        </tr>\n                        <tr>\n                            <td><span><div className=\"empty w-50\"></div></span></td><td><span><div className=\"empty\"></div></span></td>\n                            <td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty\"></div></span></td>\n                            <td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty\"></div></span></td>\n                            <td><span><div className=\"empty\"></div></span></td><td></td>\n                        </tr>\n                        <tr>\n                            <td><span><div className=\"empty w-50\"></div></span></td><td><span><div className=\"empty w-50\"></div></span></td>\n                            <td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty\"></div></span></td>\n                            <td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty\"></div></span></td>\n                            <td><span><div className=\"empty\"></div></span></td><td></td>\n                        </tr>\n                        <tr>\n                            <td><span><div className=\"empty w-50\"></div></span></td><td><span><div className=\"empty w-75\"></div></span></td>\n                            <td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty w-50\"></div></span></td>\n                            <td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty\"></div></span></td>\n                            <td><span><div className=\"empty\"></div></span></td><td></td>\n                        </tr>\n                        <tr>\n                            <td><span><div className=\"empty w-50\"></div></span></td><td><span><div className=\"empty\"></div></span></td>\n                            <td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty\"></div></span></td>\n                            <td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty\"></div></span></td>\n                            <td><span><div className=\"empty\"></div></span></td><td></td>\n                        </tr>\n                        <tr>\n                            <td><span><div className=\"empty w-50\"></div></span></td><td><span><div className=\"empty w-50\"></div></span></td>\n                            <td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty w-50\"></div></span></td>\n                            <td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty\"></div></span></td>\n                            <td><span><div className=\"empty\"></div></span></td><td></td>\n                        </tr>\n                    </tbody> \n                    }\n                </Table>\n            </Form>   \n\n            {/* pagination */}\n            { listPagination.totalPages > 0 && <CustomPagination totalPages={listPagination?.totalPages} page={page} href={\"/my-business/list/p\"}/> }\n        </>\n    )\n}   \n\nexport default Attendees;","import React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { Breadcrumb, Button, Row, Col, InputGroup, Form, Card, Tab, Nav , Table, Badge, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLink, faList } from '@fortawesome/free-solid-svg-icons';\nimport Footer from \"../components/Footer\";\nimport CustomPagination from \"../components/Pagination\";\nimport Attendees from \"../components/Attendees\";\nimport { useAuth } from \"../context/auth\";\n\nfunction List() {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n    const [selectedItems, setSelectedItems] = useState([]);\n    const [listPagination, setListPagination] = useState({});\n    const [keyword, setKeyword] = useState(\"\");\n    const params = useParams();\n    const navigate = useNavigate();\n    let url = new URL(window.location.href);\n    let page = Number(params[\"*\"]?.split(\"p\")[1] || 1);\n\n    // update search keyword\n    const updateKeyword = e => {\n        setKeyword(e.target.value);    \n    }\n\n    // search form submit\n    const getSearch = e => {\n        e.preventDefault();\n        // reset page to 1 when doing search\n        (page == 1) ? fetchItems(keyword,1) : navigate(\"/my-business/list/p1\");\n    }\n\n    // hooks: fetch data when page changes\n    useEffect(() => {\n        fetchItems(keyword);\n    },[page]);\n\n    // fetch items\n    let auth = useAuth();\n    const fetchItems = (query,goToPage) => {\n        setIsLoaded(false);\n        url.searchParams.append(\"page\", goToPage ? goToPage : page);\n        if (query) url.searchParams.append(\"q\", query);\n        fetch(`/__xpr__/pub_engine/business-admin/element/articles_json${url.search}`, {\n            method: \"GET\",\n            headers: { Auth: auth.user.token }\n        })\n        .then(res => res.json())\n        .then(\n            (result) => {\n                setIsLoaded(true);\n                setItems(result._embedded?.Article);\n                setListPagination(result.Pagination);\n            },\n            (error) => {\n                setIsLoaded(true);\n                setError(error);\n            }\n        )\n        setSelectedItems([]);\n    }\n\n    // get selected items\n    const getSelectedItems = e => {\n        let selected_item = items.find(a => a.Id == e.target.value);\n        // add/remove from selected items list\n        if (e.target.checked) {\n            if (!selectedItems.filter(item => item.Id == selected_item.Id).length) \n                setSelectedItems(arr => [...arr, selected_item]);\n        } else {\n            setSelectedItems(selectedItems.filter(item => item.Id != selected_item.Id));\n        }\n    }\n\n    // toggle all checkboxes\n    const toggleAllItems = e => {\n        (e.target.checked) ? selectAll() : unSelectAll();\n    }\n\n    // select/unselect all\n    const selectAll = e => {\n        let all_checkboxes = document.getElementsByName(\"list-check\");\n        for (let i = 0;i < all_checkboxes.length;i++) {\n            if (all_checkboxes[i].type == \"checkbox\") {\n                all_checkboxes[i].checked = true;\n                let selected_item = items.find(a => a.Id == all_checkboxes[i].value);\n                if (!selectedItems.filter(item => item.Id == selected_item.Id).length) \n                    setSelectedItems(arr => [...arr, selected_item]);\n            }\n        }\n    }\n    const unSelectAll = e => {\n        let all_checkboxes = document.getElementsByName(\"list-check\");\n        for (let i = 0;i < all_checkboxes.length;i++) {\n            if (all_checkboxes[i].type == \"checkbox\") {\n                all_checkboxes[i].checked = false;\n                setSelectedItems([]);\n            }\n        }\n    }\t\t\t\n\n    // show footer nav when select items\n    useEffect(() => {\n        if (selectedItems.length)\n            document.getElementById(\"nav-footer\").classList.add(\"active\");\n        else\n            document.getElementById(\"nav-footer\").classList.remove(\"active\");\n    }, [selectedItems]);\n\n    return (\n        <>\n            <div className=\"d-lg-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-4\">\n                <div className=\"mb-4 mb-lg-0\">\n                    <Breadcrumb className=\"d-none d-md-inline-block\" listProps={{ className: \"breadcrumb-dark breadcrumb-transparent\" }}>\n                        <Breadcrumb.Item active>Dashboard</Breadcrumb.Item>\n                    </Breadcrumb>\n                </div>\n            </div>\n\n            <Tab.Container defaultActiveKey=\"tab-1\">\n                <div className=\"table-settings mb-4\">\n                    <Row className=\"align-items-center justify-content-between\">\n                        <Col sm=\"auto\">\n                            <Nav variant=\"pills\">\n                                <Nav.Item>\n                                    <Nav.Link eventKey=\"tab-1\">Events</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey=\"tab-2\">Attendees</Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                        </Col>\n                        <Col sm=\"auto\">\n                            <div className=\"btn-toolbar mb-2 mb-md-0\">\n                                <Button as={Link} variant=\"primary\" size=\"sm\" to={\"/my-business/list/edit/new\"} state={{item: {}}}>\n                                    <i className=\"xpri-plus pe-1\"></i> New Item\n                                </Button>\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n           \n                <Card border=\"light\" className=\"table-wrapper table-responsive shadow-sm\">\n                    <Tab.Content>\n                        <Tab.Pane eventKey=\"tab-1\">\n                            <Card.Body>\n                                <Form onSubmit={getSearch}>\n                                    <Row className=\"justify-content-end align-items-center mb-3\">\n                                        <Col lg={4} className=\"d-flex justify-content-end\">\n                                            <InputGroup>\n                                                <Form.Control size=\"lg\" type=\"text\" className=\"rounded-xl px-4\" placeholder=\"Search\" value={keyword} onChange={updateKeyword}/>\n                                                <InputGroup.Text className=\"rounded-xl\">\n                                                    <i className=\"xpri-search text-primary\"></i>\n                                                </InputGroup.Text>\n                                            </InputGroup>\n                                        </Col>\n                                    </Row>\n                                </Form>\n                                <Form>\n                                    {/* list table */}\n                                    <Table responsive=\"sm\">\n                                        <thead>\n                                            <tr>\n                                                <th><Form.Check inline onChange={toggleAllItems}/></th>\n                                                <th>Type</th>\n                                                <th className=\"w-35\">Title</th>\n                                                <th className=\"w-20\">Categories</th>\n                                                <th>Created On</th>\n                                                <th>Published</th>\n                                                <th></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n\n                                        {isLoaded && items?.map(a => (\n                                            <tr key={\"list-\"+a.Id} className={selectedItems.find(item => item.Id == a.Id) ? \"selected\" : undefined}>\n                                                <td><span className=\"justify-content-start\"><Form.Check inline onChange={getSelectedItems} name=\"list-check\" value={a.Id}/></span></td>\n                                                <td><span className=\"justify-content-start\">{a.ArticleLink ? <FontAwesomeIcon icon={faLink}/> : <FontAwesomeIcon icon={faList}/> }</span></td>\n                                                <td><span><div className=\"text-truncate\" dangerouslySetInnerHTML={{__html: a.Title}}></div></span></td>\n                                                <td><span>\n                                                    {a._embedded.Categories && a._embedded.Categories.map(category => ( \n                                                        <Badge key={category.Id} bg=\"primary\">{category && category.Name}</Badge>\n                                                    ))}\n                                                    </span></td>\n                                                <td><span>{a.CreatedOn}</span></td>\n                                                <td>\n                                                    <span>\n                                                        <Form.Check type=\"switch\" defaultChecked={a.Active} id={\"switch-status-\"+a.Id}/>\n                                                    </span>\n                                                </td>\n                                                <td>\n                                                    <span>\n                                                        <div className=\"btn-group\">\n                                                            <OverlayTrigger overlay={<Tooltip>Edit</Tooltip>}>\n                                                                <Link to={\"/my-business/list/edit/\"+a.Id} state={{item: a}} className=\"btn btn-link\"><i data-toggle=\"tooltip\" className=\"xpri-edit\"></i></Link>\n                                                            </OverlayTrigger>\n                                                            <OverlayTrigger overlay={<Tooltip>Preview</Tooltip>}>\n                                                                <a href=\"\" className=\"btn btn-link\" target=\"_blank\"><i data-toggle=\"tooltip\" className=\"xpri-preview\"></i></a>\n                                                            </OverlayTrigger>\n                                                            <OverlayTrigger overlay={<Tooltip>Delete</Tooltip>}>\n                                                                <button type=\"button\" className=\"btn btn-link\"><i data-toggle=\"tooltip\" className=\"xpri-delete\"></i></button>\n                                                            </OverlayTrigger>\n                                                        </div>\n                                                    </span>\n                                                </td>\n                                            </tr>\n                                        ))}   \n                                        { error && <div>Fetching list error: {error.message}</div> }\n                                        { !items?.length && isLoaded && <tr><td colSpan=\"7\"><div className=\"text-center my-3\">No result found.</div></td></tr> }\n                                        </tbody>\n\n                                        {/* skeleton loader */}\n                                        { !isLoaded &&\n                                            <tbody>\n                                                <tr>\n                                                    <td><span></span></td><td><span><div className=\"empty\"></div></span></td><td><span><div className=\"d-flex w-100 flex-wrap align-items-center\"><div className=\"empty w-25\"></div><div className=\"empty\"></div></div></span></td>\n                                                    <td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty\"></div></span></td>\n                                                    <td><span></span></td>\n                                                </tr>\n                                                <tr>\n                                                    <td><span></span></td><td><span><div className=\"empty\"></div></span></td><td><span><div className=\"d-flex w-100 flex-wrap align-items-center\"><div className=\"empty w-50\"></div><div className=\"empty\"></div></div></span></td>\n                                                    <td><span><div className=\"empty w-50\"></div></span></td><td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty\"></div></span></td>\n                                                    <td><span></span></td>\n                                                </tr> \n                                                <tr>\n                                                    <td><span></span></td><td><span><div className=\"empty\"></div></span></td><td><span><div className=\"d-flex w-100 flex-wrap align-items-center\"><div className=\"empty w-25\"></div><div className=\"empty\"></div></div></span></td>\n                                                    <td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty\"></div></span></td>\n                                                    <td><span></span></td>\n                                                </tr> \n                                                <tr>\n                                                    <td><span></span></td><td><span><div className=\"empty\"></div></span></td><td><span><div className=\"d-flex w-100 flex-wrap align-items-center\"><div className=\"empty w-50\"></div><div className=\"empty\"></div></div></span></td>\n                                                    <td><span><div className=\"empty w-50\"></div></span></td><td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty\"></div></span></td>\n                                                    <td><span></span></td>\n                                                </tr> \n                                                <tr>\n                                                    <td><span></span></td><td><span><div className=\"empty\"></div></span></td><td><span><div className=\"d-flex w-100 flex-wrap align-items-center\"><div className=\"empty w-25\"></div><div className=\"empty\"></div></div></span></td>\n                                                    <td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty\"></div></span></td>\n                                                    <td><span></span></td>\n                                                </tr>\n                                                <tr>\n                                                    <td><span></span></td><td><span><div className=\"empty\"></div></span></td><td><span><div className=\"d-flex w-100 flex-wrap align-items-center\"><div className=\"empty w-50\"></div><div className=\"empty\"></div></div></span></td>\n                                                    <td><span><div className=\"empty w-50\"></div></span></td><td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty\"></div></span></td>\n                                                    <td><span></span></td>\n                                                </tr> \n                                                <tr>\n                                                    <td><span></span></td><td><span><div className=\"empty\"></div></span></td><td><span><div className=\"d-flex w-100 flex-wrap align-items-center\"><div className=\"empty w-25\"></div><div className=\"empty\"></div></div></span></td>\n                                                    <td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty\"></div></span></td>\n                                                    <td><span></span></td>\n                                                </tr> \n                                                <tr>\n                                                    <td><span></span></td><td><span><div className=\"empty\"></div></span></td><td><span><div className=\"d-flex w-100 flex-wrap align-items-center\"><div className=\"empty w-50\"></div><div className=\"empty\"></div></div></span></td>\n                                                    <td><span><div className=\"empty w-50\"></div></span></td><td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty\"></div></span></td>\n                                                    <td><span></span></td>\n                                                </tr> \n                                            </tbody> \n                                        }\n                                    </Table>\n                                </Form>   \n                                \n                                {/* pagination */}\n                                { listPagination.totalPages > 0 && <CustomPagination totalPages={listPagination?.totalPages} page={page} href={\"/my-business/list/p\"}/> }\n\n                            </Card.Body>\n                        </Tab.Pane>\n                    </Tab.Content>\n                    <Tab.Content>\n                        <Tab.Pane eventKey=\"tab-2\">\n                            <Card.Body>\n                                <Attendees/>\n                            </Card.Body>\n                        </Tab.Pane>\n                    </Tab.Content>\n                </Card>\n            </Tab.Container>\n\n            <Footer selectedItems={selectedItems}/>\n        </>\n    )\n}\n\nexport default List;","import React, { useState } from \"react\";\n\n// ckeditor 5\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\n// integrated from online builder\nimport InlineEditor from 'ckeditor5-custom-build/build/ckeditor';\n\n\nfunction TextEditor(props) {\n    // ckeditor config\n    // text\n    const textConfig = { toolbar: [\"bold\",\"italic\",\"underline\",\"undo\",\"redo\"], placeholder: \"Enter text\" };\n    // rte\n    const rteConfig = {\n        toolbar: [\"bold\",\"italic\",\"underline\",\"link\",\"|\",\"fontSize\",\"alignment\",\"bulletedList\",\"numberedList\",\"blockQuote\",\"|\",\"imageUpload\",\"insertTable\",\"undo\",\"redo\"],\n        image: {\n            resizeUnit:\"px\",\n            toolbar: [\"imageTextAlternative\",\"imageStyle:alignLeft\",\"imageStyle:alignRight\"],\n            styles: [\"full\",\"alignLeft\",\"alignRight\"]\n        },\n        // TODO upload image - try SimpleUploadAdapter \n        ckfinder: {\n            uploadUrl: \"/__xpr__/pub_engine/business-admin/element/file_uploader\",\n            options: {\n                resourceType: 'Images'\n            }\n        },\n        placeholder: \"Enter text\"\n    };\n\n    return (\n        <>\n            <CKEditor\n                editor={ InlineEditor }\n                config={ props.rte ? rteConfig : textConfig }\n                data={ props.value }\n                onReady={ editor => {\n                    // handle html output for headings\n                    if (!props.rte) editor.model.schema.extend(\"paragraph\", {isLimit: true});\n                } }\n                onBlur={ ( event, editor ) => {\n                    const data = editor.getData();\n                    // strip out <p> tags for headings\n                    let formatted_data = props.rte ? data : data.replace(\"<p>\",\"\").replace(\"</p>\",\"\");\n                    props.onChange(props.name,formatted_data);\n                } }\n            />\n        </>\n    );\n}\n\nexport default TextEditor;","import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Form, Card, Button } from \"react-bootstrap\";\nimport Cropper from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCropAlt } from '@fortawesome/free-solid-svg-icons';\nimport { useAuth } from \"../context/auth\";\nimport axios from \"axios\";\n\nfunction ImageEditor(props) {\n    let auth = useAuth();\n    // cropper js\n    // media zoom\n    const [cropper, setCropper] = useState();\n    const [enableCrop, setEnableCrop] = useState(false);\n    const [image, setImage] = useState(props.value);\n    const zoomMedia = e => {\n        let target = e.target;\n        const min = target.min;\n        const max = target.max;\n        const val = target.value;\n        target.style.backgroundSize = (val - min) * 100 / (max - min) + '% 100%';\n        cropper.zoomTo(val);\n    }\n    \n    // convert base64 to blob\n    function base64ToBlob(base64, mime) {\n        mime = mime || \"\";\n        var sliceSize = 1024;\n        var byteChars = window.atob(base64);\n        var byteArrays = [];\n        for (var offset = 0, len = byteChars.length; offset < len; offset += sliceSize) { var slice = byteChars.slice(offset, offset + sliceSize);var byteNumbers = new Array(slice.length);for (var i = 0; i < slice.length; i++) { byteNumbers[i] = slice.charCodeAt(i); }var byteArray = new Uint8Array(byteNumbers);byteArrays.push(byteArray); }\n        return new Blob(byteArrays, {type: mime});\n    }\n\n    // on media change\n    const onChange = e => {\n        e.preventDefault();\n        let files;\n        if (e.dataTransfer) \n            files = e.dataTransfer.files;\n        else if (e.target)\n            files = e.target.files;\n        const reader = new FileReader();\n        reader.onload = () => {\n            setImage(reader.result);\n            // upload to server\n            uploadFile(reader.result);\n        };\n        reader.readAsDataURL(files[0]);\n    };\n    \n    // on crop\n    const crop = () => {\n        if (typeof cropper !== \"undefined\") {\n            let crop_data = cropper.getCroppedCanvas().toDataURL();\n            // update crop data and image preview\n            cropper.replace(crop_data);\n            setImage(crop_data);\n            setEnableCrop(false);\n            // upload to server\n            uploadFile(crop_data);\n        }\n    };\n\n    // upload file\n    const uploadFile = (file) => {\n        // get blob data\n        let base64_image_content = file.replace(/^data:image\\/(png|jpg|jpeg|webp|svg+xml);base64,/, \"\");\n        let image_to_upload = base64ToBlob(base64_image_content, \"image/png\");   \n        // upload file\n        let formData = new FormData();\n        let timestamp = Math.floor(Date.now() / 1000);\n        formData.append(\"overwrite\",0);\n        formData.append(\"unzip\",0);\n        formData.append(\"files[]\",image_to_upload,\"xpr-business-\"+timestamp+\".png\");  \n\n        axios.post(\"/api/files/\",formData, {\n            headers: { \n                \"xpr-token-backend\": auth.user.token,\n                \"x-xsrf-token\": auth.user.xsrf_token,\n                \"Content-Type\": \"multipart/form-data\"\n            },\n            withCredentials: true\n        })\n        .then(function(response) {\n            props.onChange(props.name, { Id: response.data.Id});\n        });\n    }\n\n    return (\n        <>\n            <Card className=\"media-wrapper\">\n                <div className=\"image-container\">\n                    <img src={image} className={enableCrop ? \"d-none\" : \"image-preview\"}/>\n                    <div className={enableCrop ? \"\" : \"invisible\"}>\n                        <Cropper\n                            src={image}\n                            autoCrop={true}\n                            autoCropArea={0}\n                            style={{ height: 300, width: \"100%\" }}\n                            //initialAspectRatio={16 / 9}\n                            guides={false}\n                            background={false}\n                            dragMode={\"crop\"}\n                            viewMode={2}\n                            onInitialized={(instance) => {\n                                setCropper(instance);\n                            }}\n                        />\n                    </div>\n                </div>\n                <Card.Footer>\n                    <Row className=\"align-items-center justify-content-between\">\n                        <Col></Col>\n                        <Col xs={6} className=\"text-center\">\n                            <Form.Range defaultValue=\"0.5\" min=\"0\" max=\"1\" step=\"0.0001\" onChange={zoomMedia} className={enableCrop ? \"d-inline\" : \"d-none\"}/>\n                        </Col>\n                        <Col className=\"d-flex align-items-center justify-content-end\">\n                            <Form.Group controlId=\"crop\">\n                                <Button variant=\"primary\" className={(enableCrop || !image) ? \"d-none\" : \"icon\"} onClick={setEnableCrop}>\n                                    <FontAwesomeIcon icon={faCropAlt} size=\"xs\"/>    \n                                </Button>\n                                <Button variant=\"primary\" className={enableCrop ? \"icon bg-cherry\" : \"d-none\"} onClick={e => { setEnableCrop(false) }}>\n                                    <i className=\"xpri-close text-white font-sm\"></i>   \n                                </Button>\n                                <Button variant=\"primary\" className={enableCrop ? \"icon bg-green ms-2\" : \"d-none\"} onClick={crop}>\n                                    <i className=\"xpri-check text-white\"></i>\n                                </Button>\n                            </Form.Group>\n                            <Form.Group controlId=\"picture-1\">\n                                <Form.Label className=\"btn btn-primary icon m-0 ms-2\"><i className=\"xpri-image text-white\"></i></Form.Label>\n                                <Form.Control type=\"file\" onChange={onChange} className=\"d-none\"/>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                </Card.Footer>\n            </Card>\n        </>\n    );\n}\n\nexport default ImageEditor;","import React, { useState, useEffect } from \"react\";\nimport { Form, InputGroup } from \"react-bootstrap\";\nimport moment from \"moment-timezone\";\nimport Datetime from \"react-datetime\";\n\nfunction DateTimePicker(props) {\n    const viewMode = props.viewMode || \"days\";\n    const isTimePicker = (viewMode == \"time\");\n    const dateFormat = !isTimePicker ? \"YYYY-MM-DD\" : false;\n    let formatted_value = props.value;\n    const [value, setValue] = useState(formatted_value);\n    let placeholder = (isTimePicker) ? \"HH:mm\" : \"yyyy-mm-dd\";\n\n    // on value change: format value and update jsondata\n    useEffect(() => {\n        formatted_value = (!isTimePicker) ? moment(value).format(\"YYYY-MM-DD\") : moment(value).format(\"HH:mm\");\n        props.onChange(props.name, formatted_value);\n    },[value]);\n\n    return (\n        <>\n            <Datetime\n                dateFormat={dateFormat}\n                timeFormat={isTimePicker}\n                timeConstraints={{ minutes: { step: 15 }}}\n                onChange={setValue}\n                initialViewMode={viewMode}\n                className={viewMode+\"-picker\"}\n                renderInput={(props, openCalendar) => (\n                <InputGroup>\n                    <Form.Control\n                        type=\"text\"\n                        value={props.value ? props.value : value}\n                        placeholder={placeholder}\n                        onFocus={openCalendar} \n                        onChange={() => {}} />\n                    <InputGroup.Text><i className={!isTimePicker ? \"xpri-calendar\" : \"xpri-clock\"}></i></InputGroup.Text> \n                </InputGroup>\n            )} />\n        </>\n    );\n}\n\nexport default DateTimePicker;","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport { Breadcrumb, Button, Row, Col, Form, Card, CardGroup, Dropdown, Spinner } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\nimport axios from \"axios\";\nimport TextEditor from \"../components/TextEditor\";\nimport ImageEditor from \"../components/ImageEditor\";\nimport DateTimePicker from \"../components/DateTimePicker\";\n\nimport { useAuth } from \"../context/auth\";\n\nfunction ListItem(props) {\n    const navigate = useNavigate();\n    const { id } = useParams();\n    const isCreateNew = (id == \"new\");\n\n    // fetch data from api\n    const [error, setError] = useState(null);\n    const [item, setItem] = useState(null);\n    let content_data = isCreateNew ? {\"_embedded\": { \"Section\": { \"Id\": 6103 }, \"Language\": {\"Id\": 1 }}} : {};\n    const [jsonData, setJsonData] = useState(content_data);\n    const [isSaved, setIsSaved] = useState(true);\n    const [isLoaded, setIsLoaded] = useState(true);\n    let auth = useAuth();\n    useEffect(() => { \n        // could use location state from listing to bypass api call but would need an efficent way to detect changes\n        //if (location.state) {\n            //let data = location.state.item;    \n            //setItem(data);\n        // for create new form    \n        if (isCreateNew) {\n            setItem({});\n        } else {\n            setIsLoaded(false);\n            fetch(`/__xpr__/pub_engine/business-admin/element/article_json?id=`+id, {\n                method: \"GET\",\n                headers: {\n                    Auth: auth.user.token\n                }\n            })\n            .then(res => res.json())\n            .then(\n                (result) => { \n                    setIsLoaded(true);\n                    setItem(result);\n                },\n                (error) => {\n                    setError(error);\n                }\n            )\n        }\n    },[]);\n    \n    // content card group\n    const [cardValues, setCardValues] = useState([{title: \"\", description: \"\"}]);\n    let addCardFields = () => {\n        setCardValues([...cardValues, { title: \"\", description: \"\" }]);\n    }\n    let removeCardFields = (i) => {\n        let newCardValues = [...cardValues];\n        newCardValues.splice(i, 1);\n        setCardValues(newCardValues);\n    }\n    let handleCardChange = (i,e) => {\n        let newCardValues = [...cardValues];\n        newCardValues[i][e.target.name] = e.target.value;\n        setCardValues(newCardValues);\n    }\n\n    // tags\n    const [tags, setTags] = useState([{ name: \"\" }]);\n    let addTags = () => {\n        setTags([...tags, { name: \"\" }]);\n    }\n    let removeTags = (i) => {\n        let newTags = [...tags];\n        newTags.splice(i, 1);\n        setTags(newTags);\n    }\n    let handleTagChange = (i,e) => {\n        let newTags = [...tags];\n        newTags[i][e.target.name] = e.target.value;\n        setTags(newTags);\n    }\n\n    // update nested object\n    const updateObject = (object, path, value) => {\n        let schema = object;  \n        let p_list = path.split(\".\");\n        let len = p_list.length;\n        for(let i = 0; i < len-1; i++) {\n            let elem = p_list[i];\n            if( !schema[elem] ) schema[elem] = {}\n            schema = schema[elem];\n        }\n        schema[p_list[len-1]] = value;\n        return schema;\n    }\n\n    // update data object\n    const updateData = (name,value) => { \n        updateObject(jsonData, name, value);\n    }\n\n    // submit form\n\tconst submit_content = async (options) => {\n        let formData = {};\n        // create new item\n        if (isCreateNew) {\n            formData.uri = \"/articles/\";\n\t\t    formData.action = \"postData\";\n            jsonData.Active = (options == \"publish\") ? 1 : 0;\n        // edit item    \n        } else {\n            formData.uri = \"/articles/\"+item.Id;\n\t\t    formData.action = \"putData\";\n        }\n\t\n        formData.data = jsonData;\n        setIsSaved(false);\n        \n        // save and pub\n\t\tconst response = await axios.post(\"/__xpr__/pub_engine/business-admin/element/ajax_handler\",JSON.stringify(formData), {\n\t\t\theaders: { \n                Auth: auth.user.token,\n                \"Content-Type\": \"application/json\" \n            },\n\t\t\twithCredentials: true\n\t\t});\n\n\t\t// result\n\t\tlet result = response;\n        if (result) {\n            setIsSaved(true);\n            setItem(result.data);\n            // create new form: redirect back to listing page editing form: update states\n            if (isCreateNew)\n                navigate(\"/my-business/list/p1\");\n            else\n                navigate({state: {item: result.data}});\n        }\n    };\n\n    return (\n        <>\n            <div className=\"d-lg-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-4\">\n                <div className=\"mb-4 mb-lg-0\">\n                    <Breadcrumb className=\"d-none d-md-inline-block\" listProps={{ className: \"breadcrumb-dark breadcrumb-transparent\" }}>\n                        <Breadcrumb.Item linkAs={Link} linkProps={{ to: \"/my-business/\" }}>Dashboard</Breadcrumb.Item>\n                        <Breadcrumb.Item active>Details</Breadcrumb.Item>\n                    </Breadcrumb>\n                </div>\n            </div>\n\n            {item && \n            <Form className=\"form-content-update\" onSubmit={e => {e.preventDefault()}}>\n                <Row className=\"mb-5\">\n                    <Col sm={8}>\n                        <Card border=\"light\" className=\"shadow-sm\">\n                            <Card.Body>\n                                <Row className=\"justify-content-end align-items-center\">\n                                    <Col sm={12}>\n                                        <div className=\"mb-4\">\n                                            <Row className=\"justify-content-between\">\n                                                <Col sm={8} className=\"mb-3\">\n                                                    <h2 className=\"heading-2\">Details</h2>\n                                                    <p className=\"subheading-1\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col sm={12}>\n                                                    {/* ck editor */}\n                                                    <Form.Group className=\"ck-heading mb-4\" controlId=\"title\">\n                                                        <Form.Label>Title</Form.Label>\n                                                        <TextEditor name=\"Title\" value={item.Title} onChange={updateData}/>\n                                                    </Form.Group>\n\n                                                    <Form.Group className=\"mb-4\" controlId=\"description\">\n                                                        <Form.Label>Description</Form.Label>\n                                                        <TextEditor name=\"Description\" value={item.Description} rte={true} onChange={updateData}/>\n                                                    </Form.Group>\n                                                    \n                                                    {/* image editor */}\n                                                    <Form.Group className=\"mb-4\">\n                                                        <Form.Label>Picture</Form.Label>\n                                                        <ImageEditor name=\"_embedded.Picture\" value={item._embedded?.Picture?.SourcePath} onChange={updateData}/>\n                                                    </Form.Group>\n\n                                                    <Form.Group className=\"mb-4\" controlId=\"html\">\n                                                        <Form.Label>Html</Form.Label>\n                                                        <TextEditor name=\"Html\" value={item.Html} rte={true} onChange={updateData}/>\n                                                    </Form.Group>\n                                                 \n                                                    {/* date and time */}\n                                                    <Row>\n                                                        <Col sm={6}>\n                                                            <Form.Label>Date</Form.Label>\n                                                            <DateTimePicker name=\"DisplayDate\" value={item.DisplayDate || \"\"} onChange={updateData}/>\n                                                        </Col>\n                                                        <Col sm={3}>\n                                                            <Form.Label>Start Time</Form.Label>\n                                                            <DateTimePicker name=\"StartTime\" value={item.StartTime || \"\"} viewMode=\"time\" onChange={updateData}/>\n                                                        </Col>\n                                                        <Col sm={3}>\n                                                            <Form.Label>End Time</Form.Label>\n                                                            <DateTimePicker name=\"EndTime\" value={item.EndTime || \"\"} viewMode=\"time\" onChange={updateData}/>\n                                                        </Col>\n                                                    </Row>    \n\n                                                    {/* content card group */}\n                                                    <Form.Group className=\"mb-4\" controlId=\"card-group\">\n                                                        <h2 className=\"heading-2 mt-5 mb-4\">Courses</h2>\n                                                        <CardGroup className=\"mb-4\">\n                                                            {cardValues.map((card, index) => (\n                                                            <Card key={index}>\n                                                                <Card.Body>\n                                                                    {index ? <Button variant=\"cherry\" onClick={e => removeCardFields(index,e)}><i className=\"xpri-trash\"></i></Button> : null}\n                                                                    <Form.Group className=\"mb-3\" controlId=\"title\">\n                                                                        <Form.Label>Title</Form.Label>\n                                                                        <Form.Control type=\"text\" name=\"title\" value={card.title} onChange={e => handleCardChange(index,e)} placeholder=\"Course title\" className=\"fw-bold text-eggplant\"></Form.Control>\n                                                                    </Form.Group>\n                                                                    <Form.Group className=\"mb-3\" controlId=\"description\">\n                                                                        <Form.Label>Description</Form.Label>\n                                                                        <Form.Control type=\"text\" name=\"description\" value={card.description} onChange={e => handleCardChange(index,e)} placeholder=\"BC Mussels, Tomato Coconut Cream, smoked Chili & Lime\"></Form.Control>\n                                                                    </Form.Group>\n                                                                </Card.Body>        \n                                                            </Card>\n                                                            ))}\n                                                        </CardGroup>      \n                                                        <Button variant=\"outline-primary\" className=\"icon\" onClick={addCardFields}><i className=\"xpri-plus\"></i></Button>\n                                                    </Form.Group>\n\n                                                    <hr/>\n\n                                                    {/* tags */}\n                                                    <Form.Group className=\"mb-4\" controlId=\"tags\">\n                                                        <h2 className=\"heading-2 mt-5 mb-4\">Tags</h2>\n                                                        <section className=\"tags mb-4\">\n                                                            {tags.map((el,index) => (\n                                                            <Button variant=\"outline-dark\" key={index}>\n                                                                <Form.Control type=\"text\" plaintext htmlSize={el.name.length < 11 ? 11 : el.name.length} name=\"name\" value={el.name} onChange={e => handleTagChange(index,e)} placeholder=\"Add New Tag\"></Form.Control>\n                                                                <i className=\"xpri-delete\" onClick={e => removeTags(index,e)}></i>\n                                                            </Button>\n                                                            ))}\n                                                        </section>\n                                                        <Button variant=\"outline-primary\" className=\"icon\" onClick={addTags}><i className=\"xpri-plus\"></i></Button>\n                                                    </Form.Group>\n\n                                                    <fieldset className=\"d-flex justify-content-end\">\n                                                        { isCreateNew ? \n                                                        <Dropdown>\n                                                            <Dropdown.Toggle as={Button} variant=\"primary\">\n                                                                {isSaved ? \"Save\" : \"Saving\" } { isSaved ? <span className=\"icon icon-small ms-1\"><FontAwesomeIcon icon={faChevronDown} /></span> : <Spinner animation=\"border\" variant=\"white\" size=\"sm\" className=\"ms-2\"/> }\n                                                            </Dropdown.Toggle>\n                                                            <Dropdown.Menu className=\"dashboard-dropdown dropdown-menu-left mt-1\">\n                                                                <Dropdown.Item onClick={e => { submit_content(\"draft\")}}>\n                                                                    Save as Draft\n                                                                </Dropdown.Item>\n                                                                <Dropdown.Item onClick={e => { submit_content(\"publish\")}}>\n                                                                    Publish\n                                                                </Dropdown.Item>\n                                                            </Dropdown.Menu>\n                                                        </Dropdown>\n                                                        :\n                                                        <Button variant=\"primary\" type=\"button\" onClick={submit_content} className=\"shadow\">\n                                                           {isSaved ? \"Save\" : \"Saving\" } { !isSaved && <Spinner animation=\"border\" variant=\"white\" size=\"sm\" className=\"ms-2\"/> }\n                                                        </Button>\n                                                        }\n                                                    </fieldset>\n                                                </Col>\n                                            </Row>\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col sm={4}>\n                        <Card border=\"light\" className=\"shadow-sm\">\n                            <Card.Body>\n                                <h2 className=\"heading-2\">SEO</h2>\n                                <Form.Group className=\"mb-3\" controlId=\"DefaultPageTitle\">\n                                    <Form.Label>Page Title</Form.Label>\n                                    <Form.Control type=\"text\" name=\"PageTitle\" defaultValue={item.PageTitle} onChange={e => {updateData(e.target.name,e.target.value)}} placeholder=\"Enter Page Title\"></Form.Control>\n                                </Form.Group>\n                                \n                                <Form.Group className=\"mb-3\" controlId=\"MetaTagKeywords\">\n                                    <Form.Label>Keywords</Form.Label>\n                                    <Form.Control type=\"text\" name=\"MetaTagKeywords\" defaultValue={item.MetaTagKeywords} onChange={e => {updateData(e.target.name,e.target.value)}} placeholder=\"Enter Meta Keywords\"></Form.Control>\n                                </Form.Group>\n\n                                <Form.Group className=\"mb-3\" controlId=\"MetaTagDescription\">\n                                    <Form.Label>Meta Tag Description</Form.Label>\n                                    <div className=\"textarea-form-control\">\n                                        <Form.Control as=\"textarea\" name=\"MetaTagDescription\" defaultValue={item.MetaTagDescription} onChange={e => {updateData(e.target.name,e.target.value)}} placeholder=\"Enter Meta Description\"></Form.Control>\n                                    </div>\n                                </Form.Group>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Form>\n            }\n\n            {/* skeleton loader */}\n            { !isLoaded &&\n                <Row className=\"mb-5\">\n                    <Col sm={8}>\n                        <Card border=\"light\" className=\"shadow-sm\">\n                            <Card.Body>\n                                <Row className=\"justify-content-end align-items-center\">\n                                    <Col sm={12}>\n                                        <div className=\"mb-4\">\n                                            <Row className=\"justify-content-between\">\n                                                <Col sm={8} className=\"mb-3\">\n                                                    <h2 className=\"heading-2\">Details</h2>\n                                                    <p className=\"subheading-1\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col sm={12}>\n                                                    <Form.Group className=\"mb-4\">\n                                                        <div className=\"empty w-25 mb-2\"></div>\n                                                        <div><div className=\"empty w-50\"></div></div>\n                                                    </Form.Group>\n                                                    <Form.Group className=\"mb-4\">\n                                                        <div className=\"empty w-25 mb-2\"></div>\n                                                        <div><div className=\"empty w-75\"></div></div>\n                                                    </Form.Group>\n                                                    <Form.Group className=\"mb-4\">\n                                                        <div className=\"empty w-25 mb-2\"></div>\n                                                        <div className=\"empty w-100 fh-250\"></div>\n                                                    </Form.Group>\n                                                    <Form.Group className=\"mb-4\">\n                                                        <div className=\"empty w-25 mb-2\"></div>\n                                                        <div className=\"empty\"></div>\n                                                        <div><div className=\"empty w-75 mt-2\"></div></div>\n                                                    </Form.Group>\n                                                </Col>\n                                            </Row>\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col sm={4}>\n                        <Card border=\"light\" className=\"shadow-sm\">\n                            <Card.Body>\n                                <h2 className=\"heading-2 mb-3\">SEO</h2>\n                                <div className=\"empty w-25\"></div>\n                                <div><div className=\"empty w-75 mb-3\"></div></div>\n                                <div className=\"empty w-25\"></div>\n                                <div><div className=\"empty w-50 mb-3\"></div></div>\n                                <div className=\"empty w-25\"></div>\n                                <div className=\"empty mb-3\"></div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            }\n        </>\n    );\n}\n\nexport default ListItem;","import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { Breadcrumb, Button, ButtonGroup, Row, Col, InputGroup, Form, Dropdown, Card, Table } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog, faCheck, faSearch, faSlidersH } from '@fortawesome/free-solid-svg-icons';\nimport CustomPagination from \"../components/Pagination\";\nimport { useAuth } from \"../context/auth\";\n\nfunction Users() {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [users, setUsers] = useState([]);\n    const [listPagination, setListPagination] = useState({});\n    const [keyword, setKeyword] = useState(\"\");\n    const params = useParams();\n    const navigate = useNavigate();\n    let url = new URL(window.location.href);\n    let page = Number(params[\"*\"]?.split(\"p\")[1] || 1);\n\n    // update search keyword\n    const updateKeyword = e => {\n        setKeyword(e.target.value);    \n    }\n\n    // search form submit\n    const getSearch = e => {\n        e.preventDefault();\n        // reset page to 1 when doing search\n        (page == 1) ? fetchItems(keyword,1) : navigate(\"/my-business/users/p1\");\n    }\n\n    // hooks: fetch data when page changes\n    useEffect(() => {\n       fetchItems(keyword);\n    },[page]);\n\n    // fetch items function\n    let auth = useAuth();\n    const fetchItems = (query,goToPage) => {\n        url.searchParams.append(\"page\", goToPage ? goToPage : page);\n        if (query) url.searchParams.append(\"q\", query);\n        fetch(`/__xpr__/pub_engine/business-admin/element/users_json${url.search}`, {\n            method: \"GET\",\n            headers: {\n                Auth: auth.user.token\n            }\n        })\n        .then(res => res.json())\n            .then(\n            (result) => {\n                setIsLoaded(true);\n                setUsers(result._embedded?.User);\n                setListPagination(result.Pagination);\n            },\n            (error) => {\n                setIsLoaded(true);\n                setError(error);\n            }\n        )\n    };\n    \n    return (\n        <>\n            <div className=\"d-lg-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4\">\n                <div className=\"mb-4 mb-lg-0\">\n                    <Breadcrumb className=\"d-none d-md-inline-block\" listProps={{ className: \"breadcrumb-dark breadcrumb-transparent\" }}>\n                        <Breadcrumb.Item active>Dashboard</Breadcrumb.Item>\n                    </Breadcrumb>\n                </div>\n            </div>\n\n            <div className=\"table-settings mb-4\">\n                <Row className=\"justify-content-between\">\n                    <Col sm=\"auto\">\n                        <h1 className=\"heading-1\">Users</h1>\n                    </Col>\n                    <Col sm=\"auto\">\n                        <div className=\"btn-toolbar mb-2 mb-md-0\">\n                            <Button variant=\"primary\" size=\"sm\">\n                                <i className=\"xpri-plus pe-1\"></i> New User\n                            </Button>\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n\n            <div className=\"table-settings mb-4\">\n                <Form onSubmit={getSearch}>\n                    <Row className=\"justify-content-between align-items-center\">\n                        <Col xs={9} lg={4} className=\"d-flex\">\n                            <InputGroup className=\"me-2 me-lg-3\">\n                                <InputGroup.Text>\n                                    <FontAwesomeIcon icon={faSearch} />\n                                </InputGroup.Text>\n                                <Form.Control type=\"text\" placeholder=\"Search\" value={keyword} onChange={updateKeyword}/>\n                            </InputGroup>\n                            <Form.Select className=\"w-25\">\n                                <option defaultChecked>All</option>\n                                <option value=\"1\">Active</option>\n                                <option value=\"2\">Inactive</option>\n                                <option value=\"3\">Pending</option>\n                                <option value=\"3\">Canceled</option>\n                            </Form.Select>\n                        </Col>\n                        <Col xs={3} lg={8} className=\"text-end\">\n                            <Dropdown as={ButtonGroup} className=\"me-2\">\n                                <Dropdown.Toggle split as={Button} variant=\"link\" className=\"text-dark m-0 p-0\">\n                                    <span className=\"icon icon-sm icon-gray\">\n                                        <FontAwesomeIcon icon={faSlidersH} />\n                                    </span>\n                                </Dropdown.Toggle>\n                                <Dropdown.Menu className=\"dropdown-menu-right\">\n                                    <Dropdown.Item className=\"fw-bold text-dark\">Show</Dropdown.Item>\n                                    <Dropdown.Item className=\"d-flex fw-bold\">\n                                        10 <span className=\"icon icon-small ms-auto\"><FontAwesomeIcon icon={faCheck} /></span>\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"fw-bold\">20</Dropdown.Item>\n                                    <Dropdown.Item className=\"fw-bold\">30</Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                            <Dropdown as={ButtonGroup}>\n                                <Dropdown.Toggle split as={Button} variant=\"link\" className=\"text-dark m-0 p-0\">\n                                    <span className=\"icon icon-sm icon-gray\">\n                                        <FontAwesomeIcon icon={faCog} />\n                                    </span>\n                                </Dropdown.Toggle>\n                                <Dropdown.Menu className=\"dropdown-menu-right\">\n                                    <Dropdown.Item className=\"fw-bold text-dark\">Show</Dropdown.Item>\n                                    <Dropdown.Item className=\"d-flex fw-bold\">\n                                        10 <span className=\"icon icon-small ms-auto\"><FontAwesomeIcon icon={faCheck} /></span>\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"fw-bold\">20</Dropdown.Item>\n                                    <Dropdown.Item className=\"fw-bold\">30</Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n            \n            <Card border=\"light\" className=\"table-wrapper table-responsive shadow-sm\">\n                <Card.Body>\n                    <Table className=\"user-table align-items-center\">\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Email</th>\n                                <th>Position</th>\n                                <th>User Created at</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        \n                        {isLoaded && users?.map(u => (\n                            <tr key={u.Id}>\n                                <td>\n                                    <span>\n                                        <Card.Link className=\"d-flex align-items-center\">\n                                            <i className=\"xpri-members me-2\"></i>\n                                            <div className=\"d-block\">\n                                                <span className=\"fw-bold\">{u.FirstName && u.LastName ? u.FirstName+\" \"+u.LastName : \"Anonymous\"}</span>\n\n                                            </div>\n                                        </Card.Link>\n                                    </span>\n                                </td>\n                                <td><span><div className=\"small text-gray\">{u.Email || \"-\"}</div></span></td>\n                                <td><span><div className=\"small text-gray\">{u.CompanyName || \"-\"}</div></span></td>\n                                <td><span>{u.LastLogin || \"long ago\"}</span></td>\n                            </tr>\n                        ))}\n\n                        { error && <div>Fetching users error: {error.message}</div> }\n                        { !users && isLoaded && <tr><td colSpan=\"4\"><div className=\"text-center my-3\">No result found.</div></td></tr> }\n                        </tbody>\n\n                        {!isLoaded &&\n                            <tbody>\n                                <tr>\n                                    <td><span><div className=\"empty w-50\"></div></span></td><td><span><div className=\"empty\"></div></span></td>\n                                    <td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty w-50\"></div></span></td>\n                                </tr>\n                                <tr>\n                                    <td><span><div className=\"empty w-50\"></div></span></td><td><span><div className=\"empty w-50\"></div></span></td>\n                                    <td><span><div className=\"empty w-50\"></div></span></td><td><span><div className=\"empty w-50\"></div></span></td>\n                                </tr>\n                                <tr>\n                                    <td><span><div className=\"empty w-50\"></div></span></td><td><span><div className=\"empty w-75\"></div></span></td>\n                                    <td><span><div className=\"empty\"></div></span></td><td><span><div className=\"empty w-50\"></div></span></td>\n                                </tr>\n                            </tbody> \n                        }\n                    </Table>\n\n                    {/* pagination */}\n                    { listPagination.totalPages > 0 && <CustomPagination totalPages={listPagination?.totalPages} page={page} href={\"/my-business/users/p\"}/> }\n                </Card.Body>\n            </Card>\n        </>\n    )\n}\n\nexport default Users;","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Breadcrumb, Row, Col, Form, Card, Image } from \"react-bootstrap\";\n\nimport { useAuth } from \"../context/auth\";\n\nfunction Attendee(props) {\n    const { id } = useParams();\n    // fetch data from api\n    const [error, setError] = useState(null);\n    const [item, setItem] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(true);\n    let auth = useAuth();\n    useEffect(() => { \n        setIsLoaded(false);\n        fetch(`/__xpr__/pub_engine/business-admin/element/users_json?id=`+id, {\n            method: \"GET\",\n            headers: {\n                Auth: auth.user.token\n            }\n        })\n        .then(res => res.json())\n        .then(\n            (result) => { \n                setIsLoaded(true);\n                setItem(result);\n            },\n            (error) => {\n                setError(error);\n            }\n        )\n    },[]);\n    \n    return (\n        <>\n            <div className=\"d-lg-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-4\">\n                <div className=\"mb-4 mb-lg-0\">\n                    <Breadcrumb className=\"d-none d-md-inline-block\" listProps={{ className: \"breadcrumb-dark breadcrumb-transparent\" }}>\n                        <Breadcrumb.Item linkAs={Link} linkProps={{ to: \"/my-business/\" }}>Dashboard</Breadcrumb.Item>\n                        <Breadcrumb.Item active>Attendees</Breadcrumb.Item>\n                    </Breadcrumb>\n                    <h1 className=\"heading-1 mb-4\">Overview</h1>\n                </div>\n            </div>\n\n            {/* attendee details */}\n            {item && \n            <Form className=\"form-content-update\" onSubmit={e => {e.preventDefault()}}>\n                <Row className=\"mb-5\">\n                    <Col sm={8}>\n                        <Card border=\"light\" className=\"shadow-sm\">\n                            <Card.Body>\n                                <Row className=\"justify-content-end align-items-center\">\n                                    <Col sm={12}>\n                                        <div className=\"mb-4\">\n                                            <Row className=\"justify-content-between\">\n                                                <Col sm={8} className=\"mb-3\">\n                                                    <h2 className=\"heading-2 mb-3\">Attendee Details</h2>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col sm={12}>\n                                                    <Row>\n                                                        <Col sm=\"auto\">\n                                                            {item._embedded.CustomFields?._embedded?.ProfileImage?.SourcePath ?\n                                                            <Image src={item._embedded.CustomFields?._embedded?.ProfileImage?.SourcePath} className=\"user-avatar lg-avatar rounded-circle me-3\" />\n                                                            :\n                                                            <div className=\"user-avatar lg-avatar bg-gray-300 rounded-circle me-3\">\n                                                                <i className=\"xpri-members m-0\"></i>\n                                                            </div>\n                                                            }\n                                                        </Col>\n                                                        <Col>\n                                                            <h1 className=\"text-eggplant\">{item.FirstName || \"Firstname\"} {item.LastName || \"Lastname\"}</h1>\n                                                            <h5 className=\"mb-2\">{item.CompanyName}</h5>\n                                                            <Row>\n                                                                <Col sm={6}>\n                                                                    <Form.Group className=\"mb-3\">\n                                                                        <Form.Label className=\"d-block text-nowrap text-uppercase\">Email</Form.Label>\n                                                                        {item.Email}\n                                                                    </Form.Group>\n                                                                    <Form.Group className=\"mb-3\">\n                                                                        <Form.Label className=\"d-block text-nowrap text-uppercase\">City</Form.Label>\n                                                                        City Name goes here\n                                                                    </Form.Group>\n                                                                </Col>\n                                                                <Col sm={3}>\n                                                                    <Form.Group className=\"mb-3\">\n                                                                        <Form.Label className=\"d-block text-nowrap text-uppercase\">Phone Number</Form.Label>\n                                                                        604-123-1234\n                                                                    </Form.Group>\n                                                                </Col>\n                                                                <Col sm={2}>\n                                                                    <Form.Group className=\"mb-3\">\n                                                                        <Form.Label className=\"d-block text-nowrap text-uppercase\">User Id</Form.Label>\n                                                                        {item.Id}\n                                                                    </Form.Group>\n                                                                </Col>\n                                                            </Row>\n                                                        </Col>\n                                                    </Row>\n                                                </Col>\n                                            </Row>\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col sm={4}>\n                        <Card border=\"light\" className=\"shadow-sm\">\n                            <Card.Body>\n                                <h2 className=\"heading-2 mb-3\">Member Numbers</h2>\n                                <Form.Group className=\"d-flex align-items-center justify-content-between w-100 mb-2\">\n                                    <Form.Label className=\"text-nowrap m-0 me-3 text-uppercase\">Total events booked</Form.Label>\n                                    <Form.Text className=\"h2 text-black fw-bolder\">34</Form.Text>\n                                </Form.Group>\n                                <Form.Group className=\"d-flex align-items-center justify-content-between w-100 mb-2\">\n                                    <Form.Label className=\"text-nowrap m-0 me-3 text-uppercase\">Total tickets</Form.Label>\n                                    <Form.Text className=\"h2 text-black fw-bolder\">65</Form.Text>\n                                </Form.Group>\n                                <Form.Group className=\"d-flex align-items-center justify-content-between w-100 mb-2\">\n                                    <Form.Label className=\"text-nowrap m-0 me-3 text-uppercase\">Total cost</Form.Label>\n                                    <Form.Text className=\"h2 text-primary fw-bolder\">$1,934</Form.Text>\n                                </Form.Group>\n                                <Form.Group className=\"d-flex align-items-center justify-content-between w-100 mb-2\">\n                                    <Form.Label className=\"text-nowrap m-0 me-3 text-uppercase\">Average ticket cost</Form.Label>\n                                    <Form.Text className=\"h2 text-black fw-bolder\">$29.75</Form.Text>\n                                </Form.Group>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Form>\n            }\n\n            {/* skeleton loader */}\n            { !isLoaded &&\n                <Row className=\"mb-4\">\n                    <Col sm={8}>\n                        <Card border=\"light\" className=\"shadow-sm\">\n                            <Card.Body>\n                                <Row className=\"justify-content-end align-items-center\">\n                                    <Col sm={12}>\n                                        <div className=\"mb-4\">\n                                            <Row className=\"justify-content-between\">\n                                                <Col sm={8} className=\"mb-3\">\n                                                    <h2 className=\"heading-2 mb-3\">Attendee Details</h2>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col sm={12}>\n                                                    <Row>\n                                                        <Col sm=\"auto\">\n                                                            <div className=\"user-avatar lg-avatar bg-gray-300 rounded-circle me-3\">\n                                                                <i className=\"xpri-members m-0\"></i>\n                                                            </div>\n                                                        </Col>\n                                                        <Col>\n                                                            <Form.Group className=\"mb-4\">\n                                                                <div className=\"empty w-25 mb-2\"></div>\n                                                                <div><div className=\"empty w-50\"></div></div>\n                                                            </Form.Group>\n                                                            <Form.Group className=\"mb-4\">\n                                                                <div className=\"empty w-25 mb-2\"></div>\n                                                                <div><div className=\"empty w-75\"></div></div>\n                                                            </Form.Group>\n                                                        </Col>\n                                                    </Row>\n                                                </Col>\n                                            </Row>\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col sm={4}>\n                        <Card border=\"light\" className=\"shadow-sm\">\n                            <Card.Body>\n                                <h2 className=\"heading-2 mb-3\">Member Numbers</h2>\n                                <div className=\"empty w-25 mb-2\"></div>\n                                <div><div className=\"empty w-75\"></div></div>\n                                <div className=\"empty w-25\"></div>\n                                <div><div className=\"empty w-50 mb-5\"></div></div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            }\n\n            {/* events table */}\n            <div className=\"d-lg-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-4\">\n                <div className=\"mb-4 mb-lg-0\">\n                    <h1 className=\"heading-1 mb-4\">Events</h1>\n                </div>\n            </div>\n            <Row className=\"mb-5\">\n                <Col sm={8}>\n                    <Card border=\"light\" className=\"shadow-sm\">\n                        <Card.Body>\n                            <Row className=\"justify-content-end align-items-center\">\n                                <Col sm={12}>\n                                    <div className=\"mb-4\">\n                                        <Row className=\"justify-content-between\">      \n                                            <Col className=\"my-3\">\n                                                <Form.Group className=\"mb-4\">\n                                                    <div className=\"empty w-25 mb-2\"></div>\n                                                    <div><div className=\"empty w-50\"></div></div>\n                                                </Form.Group>\n                                                <Form.Group className=\"mb-4\">\n                                                    <div className=\"empty w-25 mb-2\"></div>\n                                                    <div><div className=\"empty w-75\"></div></div>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n}\n\nexport default Attendee;","export default __webpack_public_path__ + \"static/media/profile-picture-5.fff93226.jpg\";","export default __webpack_public_path__ + \"static/media/profile-cover.4b034f41.jpg\";","export default __webpack_public_path__ + \"static/media/profile-picture-1.e783b80f.jpg\";","export default __webpack_public_path__ + \"static/media/profile-picture-2.6d657a5c.jpg\";","export default __webpack_public_path__ + \"static/media/profile-picture-3.5eb120b2.jpg\";","export default __webpack_public_path__ + \"static/media/profile-picture-4.97bdda51.jpg\";","\nimport React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDown, faAngleUp, faChartArea, faChartBar, faChartLine, faFlagUsa, faFolderOpen, faGlobeEurope, faPaperclip, faUserPlus } from '@fortawesome/free-solid-svg-icons';\nimport { faAngular, faBootstrap, faReact, faVuejs } from \"@fortawesome/free-brands-svg-icons\";\nimport { Col, Row, Card, Image, Button, ListGroup, ProgressBar } from 'react-bootstrap';\nimport { useAuth } from \"../context/auth\";\n\nimport Profile5 from \"../assets/img/team/profile-picture-5.jpg\";\nimport ProfileCover from \"../assets/img/profile-cover.jpg\";\nimport teamMembers from \"../data/teamMembers\";\n\nexport const ProfileCardWidget = () => {\n  let auth = useAuth();\n\n  return (\n    <Card border=\"light\" className=\"text-center p-0 mb-4\">\n      <div style={{ backgroundImage: `url(${ProfileCover})` }} className=\"profile-cover rounded-top\" />\n      <Card.Body className=\"pb-5\">\n        { auth.user?.data?._embedded?.CustomFields?._embedded?.ProfileImage ?\n          <Card.Img src={auth.user?.data?._embedded?.CustomFields?._embedded?.ProfileImage.SourcePath} alt=\"\" className=\"user-avatar large-avatar rounded-circle mx-auto mt-n7 mb-4\" />\n        :\n          <Card.Img src={Profile5} alt=\"\" className=\"user-avatar large-avatar rounded-circle mx-auto mt-n7 mb-4\" />\n        }\n        <Card.Title>{auth.user?.data ? auth.user.data.FirstName + \" \" + auth.user.data.LastName : \"Bonnie Green\" }</Card.Title>\n        <Card.Subtitle className=\"fw-normal\">Senior Software Engineer</Card.Subtitle>\n        <Card.Text className=\"text-gray mb-4\">{ auth.user?.data?.City ? auth.user?.data?.City : \"New York, USA\"}</Card.Text>\n\n        <Button variant=\"primary\" size=\"sm\" className=\"m-auto\">\n          <FontAwesomeIcon icon={faUserPlus} className=\"me-1\" /> Connect\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport const ChoosePhotoWidget = (props) => {\n  const { title, photo } = props;\n\n  return (\n    <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\n      <Card.Body>\n        <h5 className=\"mb-4\">{title}</h5>\n        <div className=\"d-xl-flex align-items-center\">\n          <div className=\"user-avatar xl-avatar\">\n            <Image fluid rounded src={photo} />\n          </div>\n          <div className=\"file-field\">\n            <div className=\"d-flex justify-content-xl-center ms-xl-3\">\n              <div className=\"d-flex\">\n                <span className=\"icon icon-md\">\n                  <FontAwesomeIcon icon={faPaperclip} className=\"me-3\" />\n                </span>\n                <input type=\"file\" />\n                <div className=\"d-md-block text-start\">\n                  <div className=\"fw-normal text-dark mb-1\">Choose Image</div>\n                  <div className=\"text-gray small\">JPG, GIF or PNG. Max size of 800K</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport const CounterWidget = (props) => {\n  const { icon, iconColor, category, title, period, percentage } = props;\n  const percentageIcon = percentage < 0 ? faAngleDown : faAngleUp;\n  const percentageColor = percentage < 0 ? \"text-danger\" : \"text-success\";\n\n  return (\n    <Card border=\"light\" className=\"shadow-sm\">\n      <Card.Body>\n        <Row className=\"d-block d-xl-flex align-items-center\">\n          <Col xl={5} className=\"text-xl-center d-flex align-items-center justify-content-xl-center mb-3 mb-xl-0\">\n            <div className={`icon icon-shape icon-md icon-${iconColor} rounded me-4 me-sm-0`}>\n              <FontAwesomeIcon icon={icon} />\n            </div>\n            <div className=\"d-sm-none\">\n              <h5>{category}</h5>\n              <h3 className=\"mb-1\">{title}</h3>\n            </div>\n          </Col>\n          <Col xs={12} xl={7} className=\"px-xl-0\">\n            <div className=\"d-none d-sm-block\">\n              <h5>{category}</h5>\n              <h3 className=\"mb-1\">{title}</h3>\n            </div>\n            <small>{period}, <FontAwesomeIcon icon={faGlobeEurope} size=\"xs\" /> WorldWide</small>\n            <div className=\"small mt-2\">\n              <FontAwesomeIcon icon={percentageIcon} className={`${percentageColor} me-1`} />\n              <span className={`${percentageColor} fw-bold`}>\n                {percentage}%\n              </span> Since last month\n            </div>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport const TeamMembersWidget = () => {\n  const TeamMember = (props) => {\n    const { name, statusKey, image, icon, btnText } = props;\n    const status = {\n      online: { color: \"success\", label: \"Online\" },\n      inMeeting: { color: \"warning\", label: \"In a meeting\" },\n      offline: { color: \"danger\", label: \"Offline\" }\n    };\n\n    const statusColor = status[statusKey] ? status[statusKey].color : 'danger'\n      , statusLabel = status[statusKey] ? status[statusKey].label : 'Offline';\n\n    return (\n      <ListGroup.Item className=\"px-0\">\n        <Row className=\"align-items-center\">\n          <Col className=\"col-auto\">\n            <a href=\"#top\" className=\"user-avatar\">\n              <Image src={image} className=\"rounded-circle\" />\n            </a>\n          </Col>\n          <Col className=\"ms--2\">\n            <h4 className=\"h6 mb-0\">\n              <a href=\"#!\">{name}</a>\n            </h4>\n            <span className={`text-${statusColor}`}>● </span>\n            <small>{statusLabel}</small>\n          </Col>\n          <Col className=\"col-auto\">\n            <Button variant=\"tertiary\" size=\"sm\">\n              <FontAwesomeIcon icon={icon} className=\"me-1\" /> {btnText}\n            </Button>\n          </Col>\n        </Row>\n      </ListGroup.Item>\n    );\n  };\n\n  return (\n    <Card border=\"light\" className=\"shadow-sm\">\n      <Card.Header className=\"border-bottom border-light d-flex justify-content-between\">\n        <h5 className=\"mb-0\">Team members</h5>\n        <Button variant=\"secondary\" size=\"sm\">See all</Button>\n      </Card.Header>\n      <Card.Body>\n        <ListGroup className=\"list-group-flush list my--3\">\n          {teamMembers.map(tm => <TeamMember key={`team-member-${tm.id}`} {...tm} />)}\n        </ListGroup>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport const ProgressTrackWidget = () => {\n  const Progress = (props) => {\n    const { title, percentage, icon, color, last = false } = props;\n    const extraClassName = last ? \"\" : \"mb-2\";\n\n    return (\n      <Row className={`align-items-center ${extraClassName}`}>\n        <Col xs=\"auto\">\n          <span className={`icon icon-md text-${color}`}>\n            <FontAwesomeIcon icon={icon} className=\"me-1\" />\n          </span>\n        </Col>\n        <Col>\n          <div className=\"progress-wrapper\">\n            <div className=\"progress-info\">\n              <h6 className=\"mb-0\">{title}</h6>\n              <small className=\"fw-bold text-dark\">\n                <span>{percentage} %</span>\n              </small>\n            </div>\n            <ProgressBar variant={color} now={percentage} min={0} max={100} />\n          </div>\n        </Col>\n      </Row>\n    );\n  };\n\n  return (\n    <Card border=\"light\" className=\"shadow-sm\">\n      <Card.Header className=\"border-bottom border-light\">\n        <h5 className=\"mb-0\">Progress track</h5>\n      </Card.Header>\n      <Card.Body>\n\n        <Progress title=\"Rocket - SaaS Template\" color=\"purple\" icon={faBootstrap} percentage={34} />\n        <Progress title=\"Pixel - Design System\" color=\"danger\" icon={faAngular} percentage={60} />\n        <Progress title=\"Spaces - Listings Template\" color=\"tertiary\" icon={faVuejs} percentage={45} />\n        <Progress title=\"Stellar - Dashboard\" color=\"info\" icon={faReact} percentage={35} />\n        <Progress last title=\"Volt - Dashboard\" color=\"purple\" icon={faBootstrap} percentage={34} />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport const RankingWidget = () => {\n  return (\n    <Card border=\"light\" className=\"shadow-sm\">\n      <Card.Body>\n        <div className=\"d-flex align-items-center justify-content-between border-bottom border-light pb-3\">\n          <div>\n            <h6><FontAwesomeIcon icon={faGlobeEurope} className=\"icon icon-xs me-3\" /> Global Rank</h6>\n          </div>\n          <div>\n            <Card.Link href=\"#\" className=\"text-primary fw-bold\">\n              #755 <FontAwesomeIcon icon={faChartLine} className=\"ms-2\" />\n            </Card.Link>\n          </div>\n        </div>\n        <div className=\"d-flex align-items-center justify-content-between border-bottom border-light py-3\">\n          <div>\n            <h6 className=\"mb-0\"><FontAwesomeIcon icon={faFlagUsa} className=\"icon icon-xs me-3\" />Country Rank</h6>\n            <div className=\"small card-stats\">\n              United States <FontAwesomeIcon icon={faAngleUp} className=\"icon icon-xs text-success ms-2\" />\n            </div>\n          </div>\n          <div>\n            <Card.Link href=\"#top\" className=\"text-primary fw-bold\">\n              #32 <FontAwesomeIcon icon={faChartLine} className=\"ms-2\" />\n            </Card.Link>\n          </div>\n        </div>\n        <div className=\"d-flex align-items-center justify-content-between pt-3\">\n          <div>\n            <h6 className=\"mb-0\"><FontAwesomeIcon icon={faFolderOpen} className=\"icon icon-xs me-3\" />Category Rank</h6>\n            <Card.Link href=\"#top\" className=\"small card-stats\">\n              Travel &gt; Accomodation\n            </Card.Link>\n          </div>\n          <div>\n            <Card.Link href=\"#top\" className=\"text-primary fw-bold\">\n              #16 <FontAwesomeIcon icon={faChartLine} className=\"ms-2\" />\n            </Card.Link>\n          </div>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport const AcquisitionWidget = () => {\n  return (\n    <Card border=\"light\" className=\"shadow-sm\">\n      <Card.Body>\n        <h5>Acquisition</h5>\n        <p>Tells you where your visitors originated from, such as search engines, social networks or website referrals.</p>\n        <div className=\"d-block\">\n          <div className=\"d-flex align-items-center pt-3 me-5\">\n            <div className=\"icon icon-shape icon-sm icon-shape-danger rounded me-3\">\n              <FontAwesomeIcon icon={faChartBar} />\n            </div>\n            <div className=\"d-block\">\n              <label className=\"mb-0\">Bounce Rate</label>\n              <h4 className=\"mb-0\">33.50%</h4>\n            </div>\n          </div>\n          <div className=\"d-flex align-items-center pt-3\">\n            <div className=\"icon icon-shape icon-sm icon-shape-quaternary rounded me-3\">\n              <FontAwesomeIcon icon={faChartArea} />\n            </div>\n            <div className=\"d-block\">\n              <label className=\"mb-0\">Sessions</label>\n              <h4 className=\"mb-0\">9,567</h4>\n            </div>\n          </div>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n","\nimport { faCalendarCheck, faComment } from '@fortawesome/free-solid-svg-icons';\n\nimport Profile1 from \"../assets/img/team/profile-picture-1.jpg\"\nimport Profile2 from \"../assets/img/team/profile-picture-2.jpg\"\nimport Profile3 from \"../assets/img/team/profile-picture-3.jpg\"\nimport Profile4 from \"../assets/img/team/profile-picture-4.jpg\"\n\nexport default [\n    {\n        \"id\": 1,\n        \"image\": Profile1,\n        \"name\": \"Christopher Wood\",\n        \"statusKey\": \"online\",\n        \"icon\": faCalendarCheck,\n        \"btnText\": \"Invite\"\n    },\n    {\n        \"id\": 2,\n        \"image\": Profile2,\n        \"name\": \"Jose Leos\",\n        \"statusKey\": \"inMeeting\",\n        \"icon\": faComment,\n        \"btnText\": \"Message\"\n    },\n    {\n        \"id\": 3,\n        \"image\": Profile3,\n        \"name\": \"Bonnie Green\",\n        \"statusKey\": \"offline\",\n        \"icon\": faCalendarCheck,\n        \"btnText\": \"Invite\"\n    },\n    {\n        \"id\": 4,\n        \"image\": Profile4,\n        \"name\": \"Neil Sims\",\n        \"statusKey\": \"online\",\n        \"icon\": faComment,\n        \"btnText\": \"Message\"\n    }\n]","\nimport React, { useState } from \"react\";\nimport moment from \"moment-timezone\";\nimport Datetime from \"react-datetime\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Col, Row, Card, Form, Button, InputGroup } from 'react-bootstrap';\n\nexport const GeneralInfoForm = () => {\n\tconst [birthday, setBirthday] = useState(\"\");\n\n\treturn (\n\t\t<Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\n\t\t\t<Card.Body>\n\t\t\t\t<h5 className=\"mb-4\">General information</h5>\n\t\t\t\t<Form>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={6} className=\"mb-3\">\n\t\t\t\t\t<Form.Group id=\"firstName\">\n\t\t\t\t\t\t<Form.Label>First Name</Form.Label>\n\t\t\t\t\t\t<Form.Control required type=\"text\" placeholder=\"Enter your first name\" />\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={6} className=\"mb-3\">\n\t\t\t\t\t<Form.Group id=\"lastName\">\n\t\t\t\t\t\t<Form.Label>Last Name</Form.Label>\n\t\t\t\t\t\t<Form.Control required type=\"text\" placeholder=\"Also your last name\" />\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t\t<Col md={6} className=\"mb-3\">\n\t\t\t\t\t<Form.Group id=\"birthday\">\n\t\t\t\t\t\t<Form.Label>Birthday</Form.Label>\n\t\t\t\t\t\t<Datetime\n\t\t\t\t\t\ttimeFormat={false}\n\t\t\t\t\t\tonChange={setBirthday}\n\t\t\t\t\t\trenderInput={(props, openCalendar) => (\n\t\t\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t\t<InputGroup.Text><FontAwesomeIcon icon={faCalendarAlt} /></InputGroup.Text>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalue={birthday ? moment(birthday).format(\"MM/DD/YYYY\") : \"\"}\n\t\t\t\t\t\t\t\tplaceholder=\"mm/dd/yyyy\"\n\t\t\t\t\t\t\t\tonFocus={openCalendar}\n\t\t\t\t\t\t\t\tonChange={() => { }} />\n\t\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t)} />\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={6} className=\"mb-3\">\n\t\t\t\t\t<Form.Group id=\"gender\">\n\t\t\t\t\t\t<Form.Label>Gender</Form.Label>\n\t\t\t\t\t\t<Form.Select defaultValue=\"0\">\n\t\t\t\t\t\t<option value=\"0\">Gender</option>\n\t\t\t\t\t\t<option value=\"1\">Female</option>\n\t\t\t\t\t\t<option value=\"2\">Male</option>\n\t\t\t\t\t\t</Form.Select>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={6} className=\"mb-3\">\n\t\t\t\t\t<Form.Group id=\"emal\">\n\t\t\t\t\t\t<Form.Label>Email</Form.Label>\n\t\t\t\t\t\t<Form.Control required type=\"email\" placeholder=\"name@company.com\" />\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={6} className=\"mb-3\">\n\t\t\t\t\t<Form.Group id=\"phone\">\n\t\t\t\t\t\t<Form.Label>Phone</Form.Label>\n\t\t\t\t\t\t<Form.Control required type=\"number\" placeholder=\"+12-345 678 910\" />\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t<h5 className=\"my-4\">Address</h5>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col sm={9} className=\"mb-3\">\n\t\t\t\t\t<Form.Group id=\"address\">\n\t\t\t\t\t\t<Form.Label>Address</Form.Label>\n\t\t\t\t\t\t<Form.Control required type=\"text\" placeholder=\"Enter your home address\" />\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col sm={3} className=\"mb-3\">\n\t\t\t\t\t<Form.Group id=\"addressNumber\">\n\t\t\t\t\t\t<Form.Label>Number</Form.Label>\n\t\t\t\t\t\t<Form.Control required type=\"number\" placeholder=\"No.\" />\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col sm={4} className=\"mb-3\">\n\t\t\t\t\t<Form.Group id=\"city\">\n\t\t\t\t\t\t<Form.Label>City</Form.Label>\n\t\t\t\t\t\t<Form.Control required type=\"text\" placeholder=\"City\" />\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col sm={4} className=\"mb-3\">\n\t\t\t\t\t<Form.Group className=\"mb-2\">\n\t\t\t\t\t\t<Form.Label>Select state</Form.Label>\n\t\t\t\t\t\t<Form.Select id=\"state\" defaultValue=\"0\">\n\t\t\t\t\t\t<option value=\"0\">State</option>\n\t\t\t\t\t\t<option value=\"AL\">Alabama</option>\n\t\t\t\t\t\t<option value=\"AK\">Alaska</option>\n\t\t\t\t\t\t<option value=\"AZ\">Arizona</option>\n\t\t\t\t\t\t<option value=\"AR\">Arkansas</option>\n\t\t\t\t\t\t<option value=\"CA\">California</option>\n\t\t\t\t\t\t<option value=\"CO\">Colorado</option>\n\t\t\t\t\t\t<option value=\"CT\">Connecticut</option>\n\t\t\t\t\t\t<option value=\"DE\">Delaware</option>\n\t\t\t\t\t\t<option value=\"DC\">District Of Columbia</option>\n\t\t\t\t\t\t<option value=\"FL\">Florida</option>\n\t\t\t\t\t\t<option value=\"GA\">Georgia</option>\n\t\t\t\t\t\t<option value=\"HI\">Hawaii</option>\n\t\t\t\t\t\t<option value=\"ID\">Idaho</option>\n\t\t\t\t\t\t<option value=\"IL\">Illinois</option>\n\t\t\t\t\t\t<option value=\"IN\">Indiana</option>\n\t\t\t\t\t\t<option value=\"IA\">Iowa</option>\n\t\t\t\t\t\t<option value=\"KS\">Kansas</option>\n\t\t\t\t\t\t<option value=\"KY\">Kentucky</option>\n\t\t\t\t\t\t<option value=\"LA\">Louisiana</option>\n\t\t\t\t\t\t<option value=\"ME\">Maine</option>\n\t\t\t\t\t\t<option value=\"MD\">Maryland</option>\n\t\t\t\t\t\t<option value=\"MA\">Massachusetts</option>\n\t\t\t\t\t\t<option value=\"MI\">Michigan</option>\n\t\t\t\t\t\t<option value=\"MN\">Minnesota</option>\n\t\t\t\t\t\t<option value=\"MS\">Mississippi</option>\n\t\t\t\t\t\t<option value=\"MO\">Missouri</option>\n\t\t\t\t\t\t<option value=\"MT\">Montana</option>\n\t\t\t\t\t\t<option value=\"NE\">Nebraska</option>\n\t\t\t\t\t\t<option value=\"NV\">Nevada</option>\n\t\t\t\t\t\t<option value=\"NH\">New Hampshire</option>\n\t\t\t\t\t\t<option value=\"NJ\">New Jersey</option>\n\t\t\t\t\t\t<option value=\"NM\">New Mexico</option>\n\t\t\t\t\t\t<option value=\"NY\">New York</option>\n\t\t\t\t\t\t<option value=\"NC\">North Carolina</option>\n\t\t\t\t\t\t<option value=\"ND\">North Dakota</option>\n\t\t\t\t\t\t<option value=\"OH\">Ohio</option>\n\t\t\t\t\t\t<option value=\"OK\">Oklahoma</option>\n\t\t\t\t\t\t<option value=\"OR\">Oregon</option>\n\t\t\t\t\t\t<option value=\"PA\">Pennsylvania</option>\n\t\t\t\t\t\t<option value=\"RI\">Rhode Island</option>\n\t\t\t\t\t\t<option value=\"SC\">South Carolina</option>\n\t\t\t\t\t\t<option value=\"SD\">South Dakota</option>\n\t\t\t\t\t\t<option value=\"TN\">Tennessee</option>\n\t\t\t\t\t\t<option value=\"TX\">Texas</option>\n\t\t\t\t\t\t<option value=\"UT\">Utah</option>\n\t\t\t\t\t\t<option value=\"VT\">Vermont</option>\n\t\t\t\t\t\t<option value=\"VA\">Virginia</option>\n\t\t\t\t\t\t<option value=\"WA\">Washington</option>\n\t\t\t\t\t\t<option value=\"WV\">West Virginia</option>\n\t\t\t\t\t\t<option value=\"WI\">Wisconsin</option>\n\t\t\t\t\t\t<option value=\"WY\">Wyoming</option>\n\t\t\t\t\t\t</Form.Select>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col sm={4}>\n\t\t\t\t\t<Form.Group id=\"zip\">\n\t\t\t\t\t\t<Form.Label>ZIP</Form.Label>\n\t\t\t\t\t\t<Form.Control required type=\"tel\" placeholder=\"ZIP\" />\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<div className=\"mt-3\">\n\t\t\t\t\t<Button variant=\"primary\" type=\"submit\">Save All</Button>\n\t\t\t\t</div>\n\t\t\t\t</Form>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBoxOpen, faCartArrowDown, faChartPie, faChevronDown, faClipboard, faCommentDots, faFileAlt, faPlus, faRocket, faStore } from '@fortawesome/free-solid-svg-icons';\nimport { Col, Row, Button, Dropdown } from 'react-bootstrap';\nimport { ChoosePhotoWidget, ProfileCardWidget } from \"../components/Widgets\";\nimport { GeneralInfoForm } from \"../components/Forms\";\n\nimport Profile3 from \"../assets/img/team/profile-picture-3.jpg\";\n\n\nexport default () => {\n\treturn (\n\t\t<>\n\t\t<div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4\">\n\t\t\t<Dropdown>\n\t\t\t<Dropdown.Toggle as={Button} variant=\"secondary\" className=\"me-2\">\n\t\t\t\t<FontAwesomeIcon icon={faPlus} className=\"me-2\" />\n\t\t\t\t<span>New</span>\n\t\t\t\t<span className=\"icon icon-small ms-1\"><FontAwesomeIcon icon={faChevronDown} /></span>\n\t\t\t</Dropdown.Toggle>\n\t\t\t<Dropdown.Menu className=\"dashboard-dropdown dropdown-menu-left mt-2\">\n\t\t\t\t<Dropdown.Item>\n\t\t\t\t<FontAwesomeIcon icon={faFileAlt} className=\"me-2\" /> Document\n\t\t\t\t</Dropdown.Item>\n\t\t\t\t<Dropdown.Item>\n\t\t\t\t<FontAwesomeIcon icon={faCommentDots} className=\"me-2\" /> Message\n\t\t\t\t</Dropdown.Item>\n\t\t\t\t<Dropdown.Item>\n\t\t\t\t<FontAwesomeIcon icon={faBoxOpen} className=\"me-2\" /> Product\n\t\t\t\t</Dropdown.Item>\n\n\t\t\t\t<Dropdown.Divider />\n\n\t\t\t\t<Dropdown.Item>\n\t\t\t\t<FontAwesomeIcon icon={faRocket} className=\"text-danger me-2\" /> Subscription Plan\n\t\t\t\t</Dropdown.Item>\n\t\t\t</Dropdown.Menu>\n\t\t\t</Dropdown>\n\n\t\t\t<div className=\"d-flex\">\n\t\t\t<Dropdown>\n\t\t\t\t<Dropdown.Toggle as={Button} variant=\"primary\">\n\t\t\t\t<FontAwesomeIcon icon={faClipboard} className=\"me-2\" /> Reports\n\t\t\t\t<span className=\"icon icon-small ms-1\"><FontAwesomeIcon icon={faChevronDown} /></span>\n\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t<Dropdown.Menu className=\"dashboard-dropdown dropdown-menu-left mt-1\">\n\t\t\t\t<Dropdown.Item>\n\t\t\t\t\t<FontAwesomeIcon icon={faBoxOpen} className=\"me-2\" /> Products\n\t\t\t\t</Dropdown.Item>\n\t\t\t\t<Dropdown.Item>\n\t\t\t\t\t<FontAwesomeIcon icon={faStore} className=\"me-2\" /> Customers\n\t\t\t\t</Dropdown.Item>\n\t\t\t\t<Dropdown.Item>\n\t\t\t\t\t<FontAwesomeIcon icon={faCartArrowDown} className=\"me-2\" /> Orders\n\t\t\t\t</Dropdown.Item>\n\t\t\t\t<Dropdown.Item>\n\t\t\t\t\t<FontAwesomeIcon icon={faChartPie} className=\"me-2\" /> Console\n\t\t\t\t</Dropdown.Item>\n\n\t\t\t\t<Dropdown.Divider />\n\n\t\t\t\t<Dropdown.Item>\n\t\t\t\t\t<FontAwesomeIcon icon={faRocket} className=\"text-success me-2\" /> All Reports\n\t\t\t\t</Dropdown.Item>\n\t\t\t\t</Dropdown.Menu>\n\t\t\t</Dropdown>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<Row>\n\t\t\t<Col xs={12} xl={8}>\n\t\t\t<GeneralInfoForm />\n\t\t\t</Col>\n\n\t\t\t<Col xs={12} xl={4}>\n\t\t\t<Row>\n\t\t\t\t<Col xs={12}>\n\t\t\t\t<ProfileCardWidget />\n\t\t\t\t</Col>\n\t\t\t\t<Col xs={12}>\n\t\t\t\t<ChoosePhotoWidget\n\t\t\t\t\ttitle=\"Select profile photo\"\n\t\t\t\t\tphoto={Profile3}\n\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t</Col>\n\t\t</Row>\n\t\t</>\n\t);\n};","export default __webpack_public_path__ + \"static/media/xprs-logo-dark.41764f01.svg\";","import React, { useState, useContext, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope, faEye, faUnlockAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Col, Row, Form, Image, Button, Container, InputGroup, Alert, Spinner } from 'react-bootstrap';\nimport LogoDark from \"../assets/media/xprs-logo-dark.svg\";\nimport { useAuth } from \"../context/auth\";\n\nfunction Login(props) {\n    const [showPassword, setShowPassword] = useState(false);\n    const passwordInputType = showPassword ? \"text\" : \"password\";\n    const passwordIconColor = showPassword ? \"#262B40\" : \"\";\n    const togglePasswordVisibility = () => {\n        setShowPassword(!showPassword);\n    };\n    \n    let navigate = useNavigate();\n    let location = useLocation();\n    let from = (location.state && location.state.from) ? location.state.from.pathname : \"/my-business/\";\n    let auth = useAuth();\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [isLoaded, setIsLoaded] = useState(true);\n\n    let credentials = { \n        UserLogin: username, \n        UserPassword: password\n    }\n\n    // submission\n    const handleLogin = (e) => {\n        e.preventDefault();\n        setIsLoaded(false);\n        auth.signin(credentials,(res) => {\n            setIsLoaded(true);\n            // success: redirect to last visit page\n            if (res.status == \"SUCCESS\") {\n                navigate(from, { replace: true });\n            // error: set error    \n            } else if (res.error) {\n                if (res.error == 403) setError(\"Incorrect username or password.\");\n                if (!res?.error) setError(\"No server response\"); \n            }\n        });\n    };\n      \n    // redirect user if they are logged in\n    useEffect(() => {\n        if (localStorage.getItem(\"user\")) navigate(from, { replace: true });\n    },[]);\n\n    return (\n        <main>\n            <section className=\"vh-100 bg-soft d-flex align-items-center my-0\">\n                <Container>\n                    {/*<p className=\"text-center\">\n                        <Card.Link as={Link} to=\"/\" className=\"text-gray-700\">\n                            <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\" /> Back to homepage\n                        </Card.Link>\n                    </p>*/}\n                    <Row className=\"justify-content-center form-bg-image\">\n                        <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\n                            <div className=\"bg-white shadow-soft rounded p-4 p-lg-5 w-100 fmxw-500\">\n                                <div className=\"text-center text-md-center mb-4 mt-md-0\">\n                                    {/*<div className=\"user-avatar large-avatar mx-auto mb-3 border-dark p-2\">\n                                    <Image src={Profile3} className=\"rounded-circle\" />\n                                    </div>*/}\n                                    <Image src=\"/__xpr__/pub_engine/business-admin/web/xprs-logo-dark.svg\" className=\"navbar-brand-light mb-4\" />\n                                    <div className=\"text-center text-md-center mb-4 mt-md-0\">\n                                        <h3 className=\"mb-0\">Sign in to our platform</h3>\n                                    </div>\n                                </div>\n                                <Form onSubmit={e => handleLogin(e)} className=\"mt-5\">\n                                    <Form.Group id=\"email\" className=\"mb-4\">\n                                        <Form.Label>Your Email</Form.Label>\n                                        <InputGroup>\n                                            <InputGroup.Text>\n                                                <FontAwesomeIcon icon={faEnvelope} />\n                                            </InputGroup.Text>\n                                            <Form.Control autoFocus required type=\"text\" name=\"username\" onChange={e => setUsername(e.target.value)} placeholder=\"example@company.com\" />\n                                        </InputGroup>\n                                    </Form.Group>\n                                    <Form.Group id=\"password\" className=\"mb-4\">\n                                        <Form.Label>Your Password</Form.Label>\n                                        <InputGroup>\n                                            <InputGroup.Text>\n                                            <FontAwesomeIcon icon={faUnlockAlt} />\n                                            </InputGroup.Text>\n                                            <Form.Control required type={passwordInputType} name=\"password\" onChange={e => setPassword(e.target.value)} placeholder=\"Password\" />\n                                            <InputGroup.Text onClick={togglePasswordVisibility}>\n                                            <FontAwesomeIcon color={passwordIconColor} icon={faEye} />\n                                            </InputGroup.Text>\n                                        </InputGroup>\n                                    </Form.Group>\n                                    <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\n                                        Login { !isLoaded && <Spinner animation=\"border\" variant=\"white\" size=\"sm\" className=\"ms-2\"/>}\n                                    </Button>\n                                    \n                                    {error && <Alert className=\"mt-3\" variant=\"primary\">{error}</Alert>}\n                                </Form>\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </section>\n        </main>\n    );\n}\n\nexport default Login;","export default __webpack_public_path__ + \"static/media/signin.454f944b.svg\";","\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleLeft, faEnvelope, faUnlockAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faFacebookF, faGithub, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { Col, Row, Form, Card, Button, FormCheck, Container, InputGroup } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport { AllRoutes } from \"../../routes\";\nimport BgImage from \"../../assets/img/illustrations/signin.svg\";\n\n\nexport default () => {\n  return (\n    <main>\n      <section className=\"d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\n        <Container>\n          <p className=\"text-center\">\n            <Card.Link as={Link} to=\"/\" className=\"text-gray-700\">\n              <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\" /> Back to homepage\n            </Card.Link>\n          </p>\n          <Row className=\"justify-content-center form-bg-image\" style={{ backgroundImage: `url(${BgImage})` }}>\n            <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\n              <div className=\"mb-4 mb-lg-0 bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\n                <div className=\"text-center text-md-center mb-4 mt-md-0\">\n                  <h3 className=\"mb-0\">Create an account</h3>\n                </div>\n                <Form className=\"mt-4\">\n                  <Form.Group id=\"email\" className=\"mb-4\">\n                    <Form.Label>Your Email</Form.Label>\n                    <InputGroup>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faEnvelope} />\n                      </InputGroup.Text>\n                      <Form.Control autoFocus required type=\"email\" placeholder=\"example@company.com\" />\n                    </InputGroup>\n                  </Form.Group>\n                  <Form.Group id=\"password\" className=\"mb-4\">\n                    <Form.Label>Your Password</Form.Label>\n                    <InputGroup>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faUnlockAlt} />\n                      </InputGroup.Text>\n                      <Form.Control required type=\"password\" placeholder=\"Password\" />\n                    </InputGroup>\n                  </Form.Group>\n                  <Form.Group id=\"confirmPassword\" className=\"mb-4\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <InputGroup>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faUnlockAlt} />\n                      </InputGroup.Text>\n                      <Form.Control required type=\"password\" placeholder=\"Confirm Password\" />\n                    </InputGroup>\n                  </Form.Group>\n                  <FormCheck type=\"checkbox\" className=\"d-flex mb-4\">\n                    <FormCheck.Input required id=\"terms\" className=\"me-2\" />\n                    <FormCheck.Label htmlFor=\"terms\">\n                      I agree to the <Card.Link>terms and conditions</Card.Link>\n                    </FormCheck.Label>\n                  </FormCheck>\n\n                  <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\n                    Sign up\n                  </Button>\n                </Form>\n\n                <div className=\"mt-3 mb-4 text-center\">\n                  <span className=\"fw-normal\">or</span>\n                </div>\n                <div className=\"d-flex justify-content-center my-4\">\n                  <Button variant=\"outline-light\" className=\"btn-icon-only btn-pill text-facebook me-2\">\n                    <FontAwesomeIcon icon={faFacebookF} />\n                  </Button>\n                  <Button variant=\"outline-light\" className=\"btn-icon-only btn-pill text-twitter me-2\">\n                    <FontAwesomeIcon icon={faTwitter} />\n                  </Button>\n                  <Button variant=\"outline-light\" className=\"btn-icon-only btn-pil text-dark\">\n                    <FontAwesomeIcon icon={faGithub} />\n                  </Button>\n                </div>\n                <div className=\"d-flex justify-content-center align-items-center mt-4\">\n                  <span className=\"fw-normal\">\n                    Already have an account?\n                    <Card.Link as={Link} to={AllRoutes.Login.path} className=\"fw-bold\">\n                      {` Login here `}\n                    </Card.Link>\n                  </span>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    </main>\n  );\n};\n","\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { Col, Row, Form, Card, Button, Container, InputGroup } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport { AllRoutes } from \"../../routes\";\n\n\nexport default () => {\n  return (\n    <main>\n      <section className=\"vh-lg-100 mt-4 mt-lg-0 bg-soft d-flex align-items-center\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <p className=\"text-center\">\n              <Card.Link as={Link} to={AllRoutes.Login.path} className=\"text-gray-700\">\n                <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\" /> Back to sign in\n            </Card.Link>\n            </p>\n            <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\n              <div className=\"signin-inner my-3 my-lg-0 bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\n                <h3>Forgot your password?</h3>\n                <p className=\"mb-4\">Don't fret! Just type in your email and we will send you a code to reset your password!</p>\n                <Form>\n                  <div className=\"mb-4\">\n                    <Form.Label htmlFor=\"email\">Your Email</Form.Label>\n                    <InputGroup id=\"email\">\n                      <Form.Control required autoFocus type=\"email\" placeholder=\"john@company.com\" />\n                    </InputGroup>\n                  </div>\n                  <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\n                    Recover password\n                  </Button>\n                </Form>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    </main>\n  );\n};\n","\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleLeft, faEnvelope, faUnlockAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Col, Row, Form, Card, Button, Container, InputGroup } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport { AllRoutes } from \"../../routes\";\n\n\nexport default () => {\n  return (\n    <main>\n      <section className=\"bg-soft d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <p className=\"text-center\">\n              <Card.Link as={Link} to={AllRoutes.Login.path} className=\"text-gray-700\">\n                <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\" /> Back to sign in\n              </Card.Link>\n            </p>\n            <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\n              <div className=\"bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\n                <h3 className=\"mb-4\">Reset password</h3>\n                <Form>\n                  <Form.Group id=\"email\" className=\"mb-4\">\n                    <Form.Label>Your Email</Form.Label>\n                    <InputGroup>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faEnvelope} />\n                      </InputGroup.Text>\n                      <Form.Control autoFocus required type=\"email\" placeholder=\"example@company.com\" />\n                    </InputGroup>\n                  </Form.Group>\n                  <Form.Group id=\"password\" className=\"mb-4\">\n                    <Form.Label>Your Password</Form.Label>\n                    <InputGroup>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faUnlockAlt} />\n                      </InputGroup.Text>\n                      <Form.Control required type=\"password\" placeholder=\"Password\" />\n                    </InputGroup>\n                  </Form.Group>\n                  <Form.Group id=\"confirmPassword\" className=\"mb-4\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <InputGroup>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faUnlockAlt} />\n                      </InputGroup.Text>\n                      <Form.Control required type=\"password\" placeholder=\"Confirm Password\" />\n                    </InputGroup>\n                  </Form.Group>\n                  <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\n                    Reset password\n                  </Button>\n                </Form>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    </main>\n  );\n};\n","\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleLeft, faEye, faUnlockAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Col, Row, Form, Card, Image, Button, Container, InputGroup } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport { AllRoutes } from \"../../routes\";\nimport BgImage from \"../../assets/img/illustrations/signin.svg\";\nimport Profile3 from \"../../assets/img/team/profile-picture-3.jpg\";\n\nexport default () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const passwordInputType = showPassword ? \"text\" : \"password\";\n  const passwordIconColor = showPassword ? \"#262B40\" : \"\";\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <main>\n      <section className=\"vh-lg-100 bg-soft d-flex align-items-center my-4\">\n        <Container>\n          <p className=\"text-center\">\n            <Card.Link as={Link} to=\"/\" className=\"text-gray-700\">\n              <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\" /> Back to homepage\n            </Card.Link>\n          </p>\n          <Row className=\"justify-content-center form-bg-image\" style={{ backgroundImage: `url(${BgImage})` }}>\n            <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\n              <div className=\"bg-white shadow-soft border border-light rounded p-4 p-lg-5 w-100 fmxw-500\">\n                <div className=\"text-center text-md-center mb-4 mt-md-0\">\n                  <div className=\"user-avatar large-avatar mx-auto mb-3 border-dark p-2\">\n                    <Image src={Profile3} className=\"rounded-circle\" />\n                  </div>\n                  <h3 className=\"mb-3\">Bonnie Green</h3>\n                  <p className=\"text-gray\">Better to be safe than sorry.</p>\n                </div>\n                <Form className=\"mt-5\">\n                  <Form.Group id=\"password\" className=\"mb-4\">\n                    <Form.Label>Your Password</Form.Label>\n                    <InputGroup>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faUnlockAlt} />\n                      </InputGroup.Text>\n                      <Form.Control required type={passwordInputType} placeholder=\"Password\" />\n                      <InputGroup.Text onClick={togglePasswordVisibility}>\n                        <FontAwesomeIcon color={passwordIconColor} icon={faEye} />\n                      </InputGroup.Text>\n                    </InputGroup>\n                  </Form.Group>\n                  <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\n                    Unlock\n                  </Button>\n                </Form>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    </main>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/404.59d1f9fd.svg\";","\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { Col, Row, Card, Image, Button, Container } from 'react-bootstrap';\n\nimport { Link } from 'react-router-dom';\n\nimport { AllRoutes } from \"../../routes\";\nimport NotFoundImage from \"../../assets/img/illustrations/404.svg\";\n\n\nexport default () => {\n  return (\n    <main>\n      <section className=\"vh-100 d-flex align-items-center justify-content-center\">\n        <Container>\n          <Row>\n            <Col xs={12} className=\"text-center d-flex align-items-center justify-content-center\">\n              <div>\n                <Card.Link as={Link} to=\"/\">\n                  <Image src={NotFoundImage} className=\"img-fluid w-75\" />\n                </Card.Link>\n                <h1 className=\"text-primary mt-5\">\n                  Page not <span className=\"fw-bolder\">found</span>\n                </h1>\n                <p className=\"lead my-4\">\n                  Oops! Looks like you followed a bad link. If you think this is a\n                  problem with us, please tell us.\n            </p>\n                <Button as={Link} variant=\"primary\" className=\"animate-hover\" to=\"/\">\n                  <FontAwesomeIcon icon={faChevronLeft} className=\"animate-left-3 me-3 ms-2\" />\n                  Go back\n                </Button>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    </main>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/500.d508258f.svg\";","\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { Col, Row, Image, Button, Container } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport { AllRoutes } from \"../../routes\";\nimport ErrorImage from \"../../assets/img/illustrations/500.svg\";\n\n\nexport default () => {\n  return (\n    <main>\n      <section className=\"vh-100 d-flex align-items-center justify-content-center\">\n        <Container>\n          <Row className=\"align-items-center\">\n            <Col xs={12} lg={5} className=\"order-2 order-lg-1 text-center text-lg-left\">\n              <h1 className=\"text-primary mt-5\">\n                Something has gone <span className=\"fw-bolder\">seriously</span> wrong\n          </h1>\n              <p className=\"lead my-4\">\n                It's always time for a coffee break. We should be back by the time you finish your coffee.\n          </p>\n              <Button as={Link} variant=\"primary\" className=\"animate-hover\" to=\"/\">\n                <FontAwesomeIcon icon={faChevronLeft} className=\"animate-left-3 me-3 ms-2\" />\n                Go back\n              </Button>\n            </Col>\n            <Col xs={12} lg={7} className=\"order-1 order-lg-2 text-center d-flex align-items-center justify-content-center\">\n              <Image src={ErrorImage} className=\"img-fluid w-75\" />\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    </main>\n  );\n};\n","\nimport React, { useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { CSSTransition } from 'react-transition-group';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog, faFileAlt, faUsers, faList, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Nav, Badge, Image, Button, Accordion, Navbar } from 'react-bootstrap';\nimport { Link, NavLink } from 'react-router-dom';\nimport { useAuth } from \"../context/auth\";\n\nimport { AllRoutes } from \"../routes\";\nimport LogoLight from \"../assets/media/xprs-logo.svg\";\nimport LogoDark from \"../assets/media/xprs-logo-dark.svg\";\nimport LogoSmallLight from \"../assets/media/xprs-logo-with-red-white.svg\";\nimport LogoSmallDark from \"../assets/media/xprs-logo-with-red.svg\";\n\nexport default (props = {}) => {\n\tconst location = useLocation();\n\tconst params = useParams();\n\tconst { pathname } = location;\n\tconst [show, setShow] = useState(false);\n\tconst showClass = show ? \"show\" : \"\";\n\tlet auth = useAuth();\n\n\tconst onCollapse = () => setShow(!show);\n\n\tconst CollapsableNavItem = (props) => {\n\t\tconst { eventKey, title, icon, children = null } = props;\n\t\tconst defaultKey = pathname.indexOf(eventKey) !== -1 ? eventKey : \"\";\n\n\t\treturn (\n\t\t<Accordion as={Nav.Item} defaultActiveKey={defaultKey}>\n\t\t\t<Accordion.Item eventKey={eventKey}>\n\t\t\t<Accordion.Button as={Nav.Link} className=\"d-flex justify-content-between align-items-center\">\n\t\t\t\t<span>\n\t\t\t\t<span className=\"sidebar-icon\"><FontAwesomeIcon icon={icon} /> </span>\n\t\t\t\t<span className=\"sidebar-text\">{title}</span>\n\t\t\t\t</span>\n\t\t\t</Accordion.Button>\n\t\t\t<Accordion.Body className=\"multi-level\">\n\t\t\t\t<Nav className=\"flex-column\">\n\t\t\t\t{children}\n\t\t\t\t</Nav>\n\t\t\t</Accordion.Body>\n\t\t\t</Accordion.Item>\n\t\t</Accordion>\n\t\t);\n\t};\n\n\tconst NavItem = (props) => {\n\t\tconst { title, link, external, target, icon, image, badgeText, badgeBg = \"secondary\", badgeColor = \"primary\" } = props;\n\t\tconst classNames = badgeText ? \"d-flex justify-content-start align-items-center justify-content-between\" : \"\";\n\t\t\n\t\t// set active state for home page\n\t\tconst setHome = ((pathname == \"/\" || pathname.indexOf(\"/my-business/list\")>-1) && link.indexOf(\"/my-business/list\")>-1);\n\t\tconst linkProps = external ? { href: link } : { as: Link, to: link };\n\t\t\n\t\treturn (\n\t\t<Nav.Item onClick={() => setShow(false)}>\n\t\t\t{/*<Nav.Link {...linkProps} target={target} className={classNames}>*/}\n\t\t\t{/* // TODO: figure out active state for nested routes */}\n\t\t\t<NavLink to={link} className={({ isActive }) => ((isActive || setHome) ? 'nav-link active' : 'nav-link')}>\n\t\t\t<span>\n\t\t\t\t{icon ? <span className=\"sidebar-icon\"><FontAwesomeIcon icon={icon} /> </span> : null}\n\t\t\t\t{image ? <Image src={image} width={20} height={20} className=\"sidebar-icon svg-icon\" /> : null}\n\n\t\t\t\t<span className=\"sidebar-text\">{title}</span>\n\t\t\t</span>\n\t\t\t{badgeText ? (\n\t\t\t\t<Badge pill bg={badgeBg} text={badgeColor} className=\"badge-md notification-count ms-2\">{badgeText}</Badge>\n\t\t\t) : null}\n\t\t\t</NavLink>\n\t\t\t{/*</Nav.Link>*/}\n\t\t</Nav.Item>\n\t\t);\n\t};\n\n\treturn (\n\t<>\n\t\t<Navbar expand={false} collapseOnSelect variant=\"light\" className=\"navbar-theme-primary position-sticky top-0 px-4 d-md-none\">\n\t\t\t<Navbar.Brand className=\"me-lg-5\" as={Link} to={AllRoutes.Home.path}>\n\t\t\t<Image src=\"/__xpr__/pub_engine/business-admin/web/xprs-logo-dark.svg\" className=\"navbar-brand-light\" />\n\t\t\t</Navbar.Brand>\n\t\t\t<Navbar.Toggle aria-controls=\"main-navbar\" onClick={onCollapse}>\n\t\t\t<span className=\"navbar-toggler-icon\" />\n\t\t\t</Navbar.Toggle>\n\t\t</Navbar>\n\t\t<CSSTransition timeout={300} in={show} classNames=\"sidebar-transition\">\n\t\t\t<Navbar className={`collapse ${showClass} sidebar d-md-block bg-white text-white`}>\n\t\t\t<Navbar.Brand sticky=\"top\" as={Link} to={AllRoutes.Home.path} className=\"d-none d-sm-flex w-100 align-items-center justify-content-center\">\n\t\t\t\t{/* TODO: update path when svg is fixed */}\n\t\t\t\t<img src=\"/__xpr__/pub_engine/business-admin/web/xprs-logo-dark.svg\" className=\"d-inline-block\" alt=\"Expresia\" height=\"1.25rem\"/>\n\t\t\t</Navbar.Brand>\n\t\t\t<div className=\"sidebar-inner\">\n\t\t\t\t<div className=\"user-card d-flex d-md-none align-items-center justify-content-between justify-content-md-center\">\n\t\t\t\t<div className=\"d-flex align-items-center \">\n\t\t\t\t\t{ auth.user?.data?._embedded?.CustomFields?._embedded?.ProfileImage ?\n\t\t\t\t\t<Image src={auth.user?.data?._embedded?.CustomFields?._embedded?.ProfileImage?.SourcePath} className=\"user-avatar sm-avatar rounded-circle mx-3\" />\n\t\t\t\t\t:\n\t\t\t\t\t<div className=\"user-avatar xs-avatar border rounded-circle mx-3\"><i className=\"xpri-members m-0\"></i></div>\n\t\t\t\t\t} \n\t\t\t\t\t{/*<div className=\"user-avatar lg-avatar mx-4\">\n\t\t\t\t\t<Image src={ProfilePicture} className=\"card-img-top rounded-circle border-white\" />\n\t\t\t\t\t</div>*/}\n\t\t\t\t\t<div className=\"d-flex text-dark align-items-center\">\n\t\t\t\t\t<h6 className=\"m-0\">{auth.user?.data ? auth.user.data.FirstName + \" \" + auth.user.data.LastName : \"Bonnie Green\" }</h6>\n\t\t\t\t\t<Button as={Link} variant=\"link\" size=\"xs\" to={AllRoutes.Login.path} className=\"text-dark mx-3\">\n\t\t\t\t\t\t<FontAwesomeIcon icon={faSignOutAlt} className=\"me-2\" /> Sign Out\n\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Nav.Link className=\"collapse-close d-md-none text-dark p-0 pe-3\" onClick={onCollapse}>\n\t\t\t\t\t<i className=\"xpri-close\"></i>\n\t\t\t\t</Nav.Link>\n\t\t\t\t</div>\n\t\t\t\t<Nav className=\"flex-column\">\n\t\t\t\t<NavItem title=\"Events\" link=\"/my-business/list/p1\" icon={faList} />\n\t\t\t\t<NavItem title=\"Users\" link=\"/my-business/users/p1\" icon={faUsers} />\n\t\t\t\t<NavItem title=\"Settings\" icon={faCog} link={AllRoutes.Settings.path} />\n\n\t\t\t\t{/*<Dropdown.Divider className=\"my-3 border-soft\" />*/}\n\n\t\t\t\t<CollapsableNavItem eventKey=\"examples/\" title=\"External Pages\" icon={faFileAlt}>\n\t\t\t\t\t<NavItem title=\"Sign Up\" link={AllRoutes.Signup.path} />\n\t\t\t\t\t<NavItem title=\"Forgot password\" link={AllRoutes.ForgotPassword.path} />\n\t\t\t\t\t<NavItem title=\"Reset password\" link={AllRoutes.ResetPassword.path} />\n\t\t\t\t\t<NavItem title=\"Lock\" link={AllRoutes.Lock.path} />\n\t\t\t\t\t<NavItem title=\"404 Not Found\" link={AllRoutes.NotFound.path} />\n\t\t\t\t\t<NavItem title=\"500 Server Error\" link={AllRoutes.ServerError.path} />\n\t\t\t\t</CollapsableNavItem>\n\t\t\t\t</Nav>\n\t\t\t</div>\n\t\t\t</Navbar>\n\t\t</CSSTransition>\n\t</>\n\t);\n};\n","export default __webpack_public_path__ + \"static/media/xprs-logo.5a5060a4.svg\";","export default __webpack_public_path__ + \"static/media/xprs-logo-with-red-white.731d2698.svg\";","export default __webpack_public_path__ + \"static/media/xprs-logo-with-red.dca6633a.svg\";","\nimport Profile1 from \"../assets/img/team/profile-picture-1.jpg\"\nimport Profile2 from \"../assets/img/team/profile-picture-2.jpg\"\nimport Profile3 from \"../assets/img/team/profile-picture-3.jpg\"\nimport Profile4 from \"../assets/img/team/profile-picture-4.jpg\"\nimport Profile5 from \"../assets/img/team/profile-picture-5.jpg\"\n\nexport default [\n    {\n        \"id\": 1,\n        \"read\": false,\n        \"image\": Profile1,\n        \"sender\": \"Jose Leos\",\n        \"time\": \"a few moments ago\",\n        \"link\": \"#\",\n        \"message\": `Added you to an event \"Project stand-up\" tomorrow at 12:30 AM.`\n    },\n    {\n        \"id\": 2,\n        \"read\": false,\n        \"image\": Profile2,\n        \"sender\": \"Neil Sims\",\n        \"time\": \"2 hrs ago\",\n        \"link\": \"#\",\n        \"message\": `You've been assigned a task for \"Awesome new project\".`\n    },\n    {\n        \"id\": 3,\n        \"read\": false,\n        \"image\": Profile3,\n        \"sender\": \"Roberta Casas\",\n        \"time\": \"5 hrs ago\",\n        \"link\": \"#\",\n        \"message\": `Tagged you in a document called \"First quarter financial plans\".`\n    },\n    {\n        \"id\": 4,\n        \"read\": true,\n        \"image\": Profile4,\n        \"sender\": \"Joseph Garth\",\n        \"time\": \"1 day ago\",\n        \"link\": \"#\",\n        \"message\": `New message: \"Hey, what's up? All set for the presentation?\"`\n    },\n    {\n        \"id\": 5,\n        \"read\": true,\n        \"image\": Profile5,\n        \"sender\": \"Jose Leos\",\n        \"time\": \"2 days ago\",\n        \"link\": \"#\",\n        \"message\": `New message: \"We need to improve the UI/UX for the landing page.\"`\n    },\n]","\nimport React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBell, faEnvelopeOpen, faSignOutAlt, faUserShield } from \"@fortawesome/free-solid-svg-icons\";\nimport { faUserCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport { Row, Col, Nav, Image, Navbar, Dropdown, Container, ListGroup, Spinner } from 'react-bootstrap';\nimport { useAuth } from \"../context/auth\";\nimport NOTIFICATIONS_DATA from \"../data/notifications\";\n\nexport default (props) => {\n\t// notifications\n  \tconst [notifications, setNotifications] = useState(NOTIFICATIONS_DATA);\n  \tconst areNotificationsRead = notifications.reduce((acc, notif) => acc && notif.read, true);\n  \tconst markNotificationsAsRead = () => {\n    \tsetTimeout(() => {\n        \tsetNotifications(notifications.map(n => ({ ...n, read: true })));\n    \t}, 300);\n  \t};\n\n  \tconst Notification = (props) => {\n    \tconst { link, sender, image, time, message, read = false } = props;\n    \tconst readClassName = read ? \"\" : \"text-info\";\n\t\t\n\t\treturn ( \n\t\t<ListGroup.Item action href={link} className=\"border-bottom border-light\">\n\t\t\t<Row className=\"align-items-center\">\n\t\t\t<Col className=\"col-auto\">\n\t\t\t\t<Image src={image} className=\"user-avatar lg-avatar rounded-circle\" />\n\t\t\t</Col>\n\t\t\t<Col className=\"ps-0 ms--2\">\n\t\t\t\t<div className=\"d-flex justify-content-between align-items-center\">\n\t\t\t\t<div>\n\t\t\t\t\t<h4 className=\"h6 mb-0 text-small\">{sender}</h4>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"text-end\">\n\t\t\t\t\t<small className={readClassName}>{time}</small>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<p className=\"font-small mt-1 mb-0\">{message}</p>\n\t\t\t</Col>\n\t\t\t</Row>\n\t\t</ListGroup.Item>\n\t\t);\n\t};\n\n\t// logout\n\tconst [isLoaded, setIsLoaded] = useState(true);\n\tconst [showRightDropdown, setShowRightDropdown] = useState(false);\n\tconst navigate = useNavigate();\n\tlet auth = useAuth();\n\tconst handleLogout = e => {\n\t\tsetIsLoaded(false);\n\t\tsetShowRightDropdown(true);\n\t\tauth.signout(res => {\n\t\t\tnavigate(\"/\");\n        });\n\t};\n\n  \treturn (\n    <Navbar sticky=\"top\" variant=\"light\" className=\"navbar-top bg-white d-none d-sm-flex\" expanded>\n      \t<Container fluid className=\"px-0\">\n        \t<div className=\"d-flex justify-content-between w-100\">\n          \t\t<div className=\"navbar-brand d-flex align-items-center ps-3 ps-sm-0\">\n            \t\t<i className=\"xpri-xpr-2 text-eggplant me-3\"></i>\n            \t\t<h4 className=\"text-eggplant\">MY BUSINESS</h4>\n          \t\t</div>\n          \t\t<Nav className=\"align-items-center\">\n            \t\t<Dropdown as={Nav.Item} onToggle={markNotificationsAsRead} >\n              \t\t\t<Dropdown.Toggle as={Nav.Link} className=\"text-dark icon-notifications p-0\">\n                \t\t\t<span className=\"icon icon-sm\">\n                  \t\t\t\t<FontAwesomeIcon icon={faBell} className=\"bell-shake\" />\n\t\t\t\t\t\t\t\t{areNotificationsRead ? null : <span className=\"icon-badge rounded-circle unread-notifications\" />}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t\t<Dropdown.Menu className=\"dashboard-dropdown notifications-dropdown dropdown-menu-lg dropdown-menu-center mt-2 py-0\">\n\t\t\t\t\t\t\t<ListGroup className=\"list-group-flush\">\n\t\t\t\t\t\t\t\t<Nav.Link href=\"#\" className=\"text-center text-primary fw-bold border-bottom border-light py-3\">\n\t\t\t\t\t\t\t\t\tNotifications\n\t\t\t\t\t\t\t\t</Nav.Link>\n\n\t\t\t\t\t\t\t\t{notifications.map(n => <Notification key={`notification-${n.id}`} {...n} />)}\n\n\t\t\t\t\t\t\t\t<Dropdown.Item className=\"text-center text-primary fw-bold py-3\">\n\t\t\t\t\t\t\t\t\tView all\n\t\t\t\t\t\t\t\t</Dropdown.Item>\n\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t</Dropdown.Menu>\n            \t\t</Dropdown>\n            \t\t<span className=\"divider\"></span>\n\t\t\t\t\t<Dropdown as={Nav.Item} show={showRightDropdown} \n\t\t\t\t\t\tonToggle={(isOpen, event) => {\n\t\t\t\t\t\t\tif (event.source !== \"select\") setShowRightDropdown(isOpen);\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<Dropdown.Toggle as={Nav.Link} className=\"p-0 m-0\">\n\t\t\t\t\t\t\t<div className=\"media d-flex align-items-center\">\n\t\t\t\t\t\t\t\t{ auth.user?.data?._embedded?.CustomFields?._embedded?.ProfileImage ?\n\t\t\t\t\t\t\t\t<Image src={auth.user?.data?._embedded?.CustomFields?._embedded?.ProfileImage?.SourcePath} className=\"user-avatar sm-avatar rounded-circle me-3\" />\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<div className=\"user-avatar xs-avatar border rounded-circle me-3\"><i className=\"xpri-members m-0\"></i></div>\n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t<div className=\"media-body ms-2 text-dark align-items-center d-none d-lg-block\">\n\t\t\t\t\t\t\t\t\t<span>{auth.user?.data ? auth.user.data.FirstName + \" \" + auth.user.data.LastName : \"Bonnie Green\" }</span>\n\t\t\t\t\t\t\t\t\t<i className=\"xpri-arrow-right ms-2 text-cherry\"></i>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t\t<Dropdown.Menu className=\"user-dropdown dropdown-menu-right mt-2\">\n\t\t\t\t\t\t\t<Dropdown.Item onClick={() => {navigate(\"/my-business/settings\");setShowRightDropdown(false);}}>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faUserCircle} className=\"me-2\" /> My Profile\n\t\t\t\t\t\t\t</Dropdown.Item>\n\t\t\t\t\t\t\t{/*<Dropdown.Item onClick={() => {setShowRightDropdown(false)}}>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faCog} className=\"me-2\" /> Settings\n\t\t\t\t\t\t\t</Dropdown.Item>*/}\n\t\t\t\t\t\t\t<Dropdown.Item onClick={() => {setShowRightDropdown(false)}}>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faEnvelopeOpen} className=\"me-2\" /> Messages\n\t\t\t\t\t\t\t</Dropdown.Item>\n\t\t\t\t\t\t\t<Dropdown.Item onClick={() => {setShowRightDropdown(false)}}>\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faUserShield} className=\"me-2\" /> Support\n\t\t\t\t\t\t\t</Dropdown.Item>\n\n\t\t\t\t\t\t\t<Dropdown.Divider />\n\n\t\t\t\t\t\t\t<Dropdown.Item onClick={(e) => {handleLogout(e)}} className={isLoaded ? \"\" : \"d-flex\"}>\n\t\t\t\t\t\t\t{ !isLoaded ? <Spinner animation=\"border\" variant=\"dark\" size=\"sm\" className=\"me-2\"/> : <FontAwesomeIcon icon={faSignOutAlt} className=\"text-danger me-2\" />}  Logout \n\t\t\t\t\t\t\t</Dropdown.Item>\n\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t</Dropdown>\n          \t\t</Nav>\n       \t \t</div>\n     \t</Container>\n    </Navbar>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/loader.8abb4322.gif\";","\nimport React from 'react';\nimport { Image } from 'react-bootstrap';\nimport PreloaderLogo from \"../assets/media/loader.gif\";\n\nexport default (props) => {\n  const { show } = props;\n  \n  return (\n    <div className={`preloader bg-soft flex-column justify-content-center align-items-center ${show ? \"\" : \"show\"}`}>\n      <Image className=\"loader-element\" src={PreloaderLogo} height={60} />\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Routes, Route, Navigate, Outlet, useLocation } from \"react-router-dom\";\nimport { AllRoutes } from \"../routes\";\nimport { useAuth } from \"../context/auth\";\nimport { useSite } from \"../context/site\";\n\n// pages\nimport List from \"./List\";\nimport ListItem from \"./ListItem\";\nimport Users from \"./Users\";\nimport Attendee from \"./Attendee\";\nimport Settings from \"./Settings\";\nimport Login from \"./Login\";\nimport Signup from \"./examples/Signup\";\nimport ForgotPassword from \"./examples/ForgotPassword\";\nimport ResetPassword from \"./examples/ResetPassword\";\nimport Lock from \"./examples/Lock\";\nimport NotFoundPage from \"./examples/NotFound\";\nimport ServerError from \"./examples/ServerError\";\n\n// components\nimport Sidebar from \"../components/Sidebar\";\nimport Navbar from \"../components/Navbar\";\nimport Preloader from \"../components/Preloader\";\n\n// full page with loader\nconst RouteWithLoader = ({ component: Component, ...rest }) => {\n\tlet site = useSite();\n  \tconst [loaded, setLoaded] = useState(site.siteConfig.showPreloader);\n\n  \tuseEffect(() => {\n    \tconst timer = setTimeout(() => setLoaded(!site.siteConfig.showPreloader), 1000);\n    \treturn () => clearTimeout(timer);\n  \t}, [site]);\n\n  \treturn (\n    \t//<Route {...rest} render={props => ( \n      \t<> \n        \t<Preloader show={loaded ? false : true} /> <Component/> \n      \t</> \n    \t//)}/>\n  \t);\n};\n\n// page with sidebar\nconst RouteWithSidebar = ({ component: Component, ...rest }) => {\n\tlet site = useSite();\n  \tconst [loaded, setLoaded] = useState(site.siteConfig.showPreloader);\n\n  \tuseEffect(() => {\n    \tconst timer = setTimeout(() => setLoaded(!site.siteConfig.showPreloader), 1000);\n    \treturn () => clearTimeout(timer);\n  \t}, [site]);\n\n  \t/*const localStorageIsSettingsVisible = () => {\n    \treturn localStorage.getItem('settingsVisible') === 'false' ? false : true\n  \t}\n  \tconst [showSettings, setShowSettings] = useState(localStorageIsSettingsVisible);\n  \tconst toggleSettings = () => {\n    \tsetShowSettings(!showSettings);\n    \tlocalStorage.setItem('settingsVisible', !showSettings);\n  \t}*/\n\n  \treturn (\n    \t//<Route {...rest} render={props => (\n      \t<>\n        \t<Preloader show={loaded ? false : true} />\n\t\t\t<Sidebar />\n\t\t\t<Navbar />\n\t\t\t<main className=\"content\">\n\t\t\t\t<Component/>\n\t\t\t\t{/*<Footer toggleSettings={toggleSettings} showSettings={showSettings} />*/}\n\t\t\t</main>\n      \t</>\n      \t//)}>\n  );\n};\n\nfunction PrivateRoute({ children, ...rest }) {\t\t\n\tlet auth = useAuth();\n\tconst location = useLocation();\n\tlet userData = (localStorage.getItem(\"user\")) ? JSON.parse(localStorage.getItem(\"user\")) : \"\"; \n\tauth.user = userData;\n\treturn (\n        auth.user ? <Outlet {...rest} location={location}/> :\n        (<Navigate to=\"/my-business/login\" state={{ from: location }} replace />)\n\t)\n}\n\nexport default () => (\n\t\t<Routes>\n\t\t\t<Route path={AllRoutes.Login.path} element={<RouteWithLoader component={Login}/>}/>\n\t\t\t<Route path={AllRoutes.Signup.path} element={<RouteWithLoader component={Signup}/>}/>\n\t\t\t<Route path={AllRoutes.ForgotPassword.path} element={<RouteWithLoader component={ForgotPassword}/>}/>\n\t\t\t<Route path={AllRoutes.ResetPassword.path} element={<RouteWithLoader component={ResetPassword}/>}/>\n\t\t\t<Route path={AllRoutes.Lock.path} element={<RouteWithLoader component={Lock}/>}/>\n\t\t\t<Route path={AllRoutes.NotFound.path} element={<RouteWithLoader component={NotFoundPage}/>}/>\n\t\t\t<Route path={AllRoutes.ServerError.path} element={<RouteWithLoader component={ServerError}/>}/>\n\n\t\t\t{/* pages */}\n\t\t\t<Route element={<PrivateRoute />}>\n\t\t\t\t{/* xpr */}\n\t\t\t\t{/* list (events) */}\n\t\t\t\t<Route index element={<RouteWithSidebar component={List}/>} />\n\t\t\t\t<Route path={AllRoutes.Home.path} element={<RouteWithSidebar component={List}/>}/>\n\t\t\t\t<Route path={AllRoutes.Start.path} element={<RouteWithSidebar component={List}/>}/>\n\t\t\t\t<Route path={AllRoutes.List.path} element={<RouteWithSidebar component={List}/>}/>\n\t\t\t\t<Route path={AllRoutes.ListItem.path} element={<RouteWithSidebar component={ListItem}/>}/>\n\t\t\t\t\n\t\t\t\t{/* attendee */}\n\t\t\t\t<Route path={AllRoutes.Attendee.path} element={<RouteWithSidebar component={Attendee}/>}/>\n\n\t\t\t\t{/* users */}\n\t\t\t\t<Route path={AllRoutes.Users.path} element={<RouteWithSidebar component={Users}/>}/>\n\n\t\t\t\t{/* other references */}\n\t\t\t\t<Route path={AllRoutes.Settings.path} element={<RouteWithSidebar component={Settings}/>}/>\n\t\t\t</Route>\n\n\t\t\t{/* not found */}\n\t\t\t<Route path='*' element={<NotFoundPage />} />\n\t\t</Routes>\n);\n","// Here are more informations about the scroll restoration of React Router\n// https://reactrouter.com/web/guides/scroll-restoration\n\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo({ top: 0, left: 0, behavior: \"auto\" });\n  }, [pathname]);\n\n  return null;\n}","// =========================================================\n// * Volt React Dashboard\n// =========================================================\n\n// * Product Page: https://themesberg.com/product/dashboard/volt-react\n// * Copyright 2021 Themesberg (https://www.themesberg.com)\n// * Official Repository: https://github.com/themesberg/volt-react-dashboard\n// * License: MIT License (https://themesberg.com/licensing)\n\n// * Designed and coded by https://themesberg.com\n\n// =========================================================\n\n// * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. Please contact us to request a removal.\n\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { AuthProvider } from \"./context/auth\";\nimport { SiteContext } from \"./context/site\";\n\n// core styles\nimport \"./scss/volt.scss\";\n\n// vendor styles\nimport \"react-datetime/css/react-datetime.css\";\n \n// home page\nimport HomePage from \"./pages/HomePage\";\nimport ScrollToTop from \"./components/ScrollToTop\";\n\nReactDOM.render(\n\t<AuthProvider>\n\t\t<SiteContext>\n\t\t\t<BrowserRouter>\n\t\t\t\t<ScrollToTop />\n\t\t\t\t<HomePage />\n\t\t\t</BrowserRouter>\n\t\t</SiteContext>\n\t</AuthProvider>,\n  \tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}